#ifndef _main_h_
#define _main_h_
/*======================================================================================================================================*/
/*                                                       Аппаратные особенности.                                                        */
/*======================================================================================================================================*/
//Определение выводов порта A:
#define OUT0         PORTA0                //вывод передачи данных 0                      OUT (0)
#define OUT1         PORTA1                //вывод передачи данных 1                      OUT (0)
#define OUT2         PORTA2                //вывод передачи данных 2                      OUT (0)
#define OUT3         PORTA3                //вывод передачи данных 3                      OUT (0)
#define OUT4         PORTA4                //вывод передачи данных 4                      OUT (0)
#define OUT5         PORTA5                //вывод передачи данных 5                      OUT (0)
#define OUT6         PORTA6                //вывод передачи данных 6                      OUT (0)
#define OUT7         PORTA7                //вывод передачи данных 7                      OUT (0)

//Определение выводов порта В:
#define OUT8         PORTB0                //вывод передачи данных 8                      OUT (0)
#define OUT9         PORTB1                //вывод передачи данных 9                      OUT (0)
#define OUT10        PORTB2                //вывод передачи данных 10                     OUT (0)
#define OUT11        PORTB3                //вывод передачи данных 11                     OUT (0)
#define SS           PINB4                 //вывод запуска "ведомого" SPI                 IN  (V)
#define MOSI         PINB5                 //вывод приёма данных "ведомым" по SPI         IN  (^)
#define MISO         PORTB6                //вывод передачи данных "ведомым" по SPI       OUT (1)
#define SCK          PINB7                 //вывод тактового сигнала от "ведущего" SPI    IN  (^)

//Определение выводов порта C:
#define OUT12        PORTC0                //вывод передачи данных 12                     OUT (0)
#define OUT13        PORTC1                //вывод передачи данных 13                     OUT (0)
#define OUT14        PORTC2                //вывод передачи данных 14                     OUT (0)
#define OUT15        PORTC3                //вывод передачи данных 15                     OUT (0)
#define OUT16        PORTC4                //вывод передачи данных 16                     OUT (0)
#define OUT17        PORTC5                //вывод передачи данных 17                     OUT (0)
#define OUT18        PORTC6                //вывод передачи данных 18                     OUT (0)
#define OUT19        PORTC7                //вывод передачи данных 19                     OUT (0)

//Определение выводов порта D:
#define OUT20        PORTD0                //вывод передачи данных 20                     OUT (0)
#define OUT21        PORTD1                //вывод передачи данных 21                     OUT (0)
#define OUT22        PORTD2                //вывод передачи данных 22                     OUT (0)
#define OUT23        PORTD3                //вывод передачи данных 23                     OUT (0)
#define OUT24        PORTD4                //вывод передачи данных 24                     OUT (0)
#define OUT25        PORTD5                //вывод передачи данных 25                     OUT (0)
#define OUT26        PORTD6                //вывод передачи данных 26                     OUT (0)
/*======================================================================================================================================*/
/*                                                          Глобальные переменные.                                                      */
/*======================================================================================================================================*/
unsigned char byte_from_modbus1;
unsigned char byte_from_modbus2;
unsigned char byte_from_modbus3;
unsigned char byte_from_modbus4;
/*======================================================================================================================================*/
/*                                                                 Прототипы.                                                           */
/*======================================================================================================================================*/
void SPI_SlaveInit(void);
unsigned char SPI_SlaveReceive(void);

#endif
/*
Пометки:
1. Регистры портов в/в. Разряд DDxn регистра DDx определяет направление передачи данных через контакт ввода/вывода. Если этот разряд установлен в «1», то n-й вывод
порта является выходом, если же сброшен в «0» — входом. Разряд PORTxn регистра PORTx выполняет двойную функцию. Если вывод функционирует как выход (DDxn = «1»), 
этот разряд определяет состояние вывода порта. Если разряд установлен в «1», на выводе устанавливается напряжение ВЫСОКОГО уровня. Если разряд сброшен в «0», на 
выводе устанавливается напряжение НИЗКОГО уровня. Если же вывод функционирует как вход (DDxn = «0»), разряд PORTxn определяет состояние внутреннего подтягивающего 
резистора для данного вывода. При установке разряда PORTxn в «1» подтягивающий резистор подключается между выводом микроконтроллера и проводом питания. Состояние 
вывода микроконтроллера (независимо от установок разряда DDxn) может быть получено путем чтения разряда PINxn регистра PINx.
*/

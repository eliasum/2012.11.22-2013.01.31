#ifndef _main_h_
#define _main_h_

#ifndef EEMEM
#define EEMEM__attribute__ ((section (".eeprom")))
#endif
/*==========================================================================================================================*/
/*                                                 Аппаратные особенности                                                   */
/*==========================================================================================================================*/
#define SAVE       PINB2                       //кнопка сохранения канала
#define TOGGLE     PINB3                       //кнопка переключения канала
#define MODE       PINB4                       //вход задания режима работы
/*==========================================================================================================================*/
/*                                                        Константы                                                         */
/*==========================================================================================================================*/
#define t4_8       705                         //оцифрованные уставки для порогов датчиков температуры и давления
#define t4_30      617
#define t4_37      591
#define t5_37      595
#define t5_95      403
#define t6_115     341
#define t5_118     336
#define d1_1       114
#define d1_4       213
#define Hyst_t     10                          //оцифрованные значения гистерезиса датчиков температуры и давленния 
#define Hyst_p     10
#define CtAd0      63                          //количество измерений АЦП 0...63

#define OVF_TIM1   4                           //время переполнения таймера1, мс
#define RELOAD     (250/OVF_TIM1)              //константа, задающая период вызова прерывания по переполнению для индикации каждые 250 мс

#define INKEY_PORT PINB                        //порт подключения кнопок управления (XXXX XXXX)
#define KEY_MASK   0x0c                        //маска считывания кнопок            (0000 1100)
#define KEY_BS     0x08                        //считываемое значение при 'SAVE'    (0000 1000) 2-й бит = 0
#define KEY_BT     0x04                        //считываемое значение при 'TOGGLE'  (0000 0100) 3-й бит = 0
#define KEY_EMPTY  0                           //не нажато
#define KSTATE     10                          //количество проверок при сканировании кнопок

#define EEPROM_START_ADDRESS 0                 //начальный адрес в EEPROM
#define ADDRESS_VIA_POINTER (uint16_t *)(count_channel*2 + EEPROM_START_ADDRESS) //вариант задания адреса в EEPROM через указатель на адрес 
#define ADDRESS_VIA_EEMEM   (&eememory[i] + EEPROM_START_ADDRESS)                //вариант задания адреса в EEPROM через массив адресов EEPROM
                          // 
const unsigned char NumberAdNew[4]={1,2,3,0};  //массив номеров каналов АЦП
const unsigned int ustavki[7] = {t4_8, t4_30, t4_37, t5_37, t5_95, t6_115, t5_118};
/*==========================================================================================================================*/
/*                                                  Глобальные переменные                                                   */
/*==========================================================================================================================*/
unsigned long TDiz;
unsigned int  TDizTemp[16];
unsigned int  AdTemp;
unsigned int  AdResult[12];
unsigned int  ICR1_value;
unsigned int  NDiz;                                                     //число оборотов маховика коленвала дизеля
unsigned int  Dd1;                                                      //оцифрованное значение датчика давления
unsigned int  Dt4, Dt5, Dt6;                                            //оцифрованные значения датчиков температуры
unsigned int  ICR1Old;
unsigned int  RegWait;     
unsigned int  array[7];                                                 //оцифрованные уставки в ОЗУ
unsigned int  from_ee[7];                                               //оцифрованные уставки, считанные из EEPROM
unsigned int  eememory[7] EEMEM;                                        //массив адресов уставок в EEPROM
unsigned int  count_channel;                                            //номер канала индикации и записи калибровочной константы     
	                                      
unsigned char NumberAd;                                                 //номер текущего канала АЦП
unsigned char CtAd;                                                     //номер текущего измерения АЦП
unsigned char CtTDiz;
unsigned char CtOverLow;
unsigned char RegS,RegSTemp,RegSOld, InvCounter, NDiz_Overflow=0;
unsigned char Dt4_8, Dt4_30, Dt4_37, Dt5_37, Dt5_95, Dt5_118, Dt6_115;  //флаг датчика температуры Dtn по порогу, где n - номер датчика
unsigned char Dd1_1, Dd1_4;                                             //флаг датчика давления Ddn по порогу, где n - номер датчика
unsigned char Nd_500, Nd_1450, Nd_1750;                                 //флаг датчика частоты оборотов маховика коленвала дизеля Nd по порогу
unsigned char mode;                                                     //флаг установки режима работы
unsigned char save;

unsigned char Key_Inp;                                                  //принятая кнопка
unsigned char Key_new;                                                  //кнопка, обнаруженая в этот раз
unsigned char Key_old;                                                  //кнопка, обнаруженая в предыдущий раз
unsigned char Count_on;                                                 //счетчик нажатия кнопки
unsigned char Count_off;                                                //счетчик отпускания кнопки
unsigned char Ff_key;                                                   //флаг фиксации нажатия кнопки управления

unsigned char const_write_ok;                                           //флаг успешной записи калибровочной константы
unsigned char mask_leds_c;                                              //маска порта С для управления индикацией
unsigned char mask_leds_d;                                              //маска порта D для управления индикацией
unsigned char timer_250;                                                //переменная для загрузки константы RELOAD

volatile unsigned char CtIntT1;
/*==========================================================================================================================*/
/*                                                        Протопипы                                                         */
/*==========================================================================================================================*/
void InitAd(void);
void AccountNDiz(void);
void AccountADC(void);
unsigned int switch_channel(unsigned int channel);
#endif
/*
Пометки:
1. Регистры портов в/в. Разряд DDxn регистра DDx определяет направление передачи данных через контакт ввода/вывода. Если этот разряд установлен в «1», то n-й вывод
порта является выходом, если же сброшен в «0» — входом. Разряд PORTxn регистра PORTx выполняет двойную функцию. Если вывод функционирует как выход (DDxn = «1»), 
этот разряд определяет состояние вывода порта. Если разряд установлен в «1», на выводе устанавливается напряжение ВЫСОКОГО уровня. Если разряд сброшен в «0», на выводе 
устанавливается напряжение НИЗКОГО уровня. Если же вывод функционирует как вход (DDxn = «0»), разряд PORTxn определяет состояние внутреннего подтягивающего резистора 
для данного вывода. При установке разряда PORTxn в «1» подтягивающий резистор подключается между выводом микроконтроллера и проводом питания. Состояние вывода микроконтроллера 
(независимо от установок разряда DDxn) может быть получено путем чтения разряда PINxn регистра PINx.

2. Режим захват. Регистр захвата ICR1 (ICR3) входит в состав блока захвата, назначение которого — сохранение в определенный момент времени состояния таймера/счетчика 
в регистре захвата ICR1 (ICR3). Это действие может производиться либо по активному фронту сигнала на выводе ICP1 (ICP3) микроконтроллера, 
либо (для таймера/счетчика T1) по сигналу от аналогового компаратора. Одновременно с записью в регистр захвата устанавливается флаг ICF1 регистра TIFR 
(ICF3 регистра ETIFR) и генерируется запрос на прерывание. Разрешение прерывания осуществляется установкой в «1» разряда TICIE1 регистра TIMSK
(TICIE3 регистра ETIMSK). Программно запись в регистр ICR1 (ICR3) возможна только в режимах, в которых регистр захвата определяет модуль счета таймера/счетчика. 
Вывод ICP1 (ICP3) в этих режимах отключен и функция захвата, соответственно, выключена.
*/

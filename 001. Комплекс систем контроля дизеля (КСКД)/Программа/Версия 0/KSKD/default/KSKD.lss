
KSKD.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000c32  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000001a  00800060  00000c32  00000cc6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000064  0080007a  0080007a  00000ce0  2**0
                  ALLOC
  3 .debug_aranges 00000020  00000000  00000000  00000ce0  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_pubnames 000002aa  00000000  00000000  00000d00  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000512  00000000  00000000  00000faa  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000111  00000000  00000000  000014bc  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000053b  00000000  00000000  000015cd  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000b0  00000000  00000000  00001b08  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000001d8  00000000  00000000  00001bb8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	14 c0       	rjmp	.+40     	; 0x2a <__ctors_end>
   2:	2e c0       	rjmp	.+92     	; 0x60 <__bad_interrupt>
   4:	2d c0       	rjmp	.+90     	; 0x60 <__bad_interrupt>
   6:	2c c0       	rjmp	.+88     	; 0x60 <__bad_interrupt>
   8:	2b c0       	rjmp	.+86     	; 0x60 <__bad_interrupt>
   a:	9d c4       	rjmp	.+2362   	; 0x946 <__vector_5>
   c:	29 c0       	rjmp	.+82     	; 0x60 <__bad_interrupt>
   e:	28 c0       	rjmp	.+80     	; 0x60 <__bad_interrupt>
  10:	1e c5       	rjmp	.+2620   	; 0xa4e <__vector_8>
  12:	26 c0       	rjmp	.+76     	; 0x60 <__bad_interrupt>
  14:	25 c0       	rjmp	.+74     	; 0x60 <__bad_interrupt>
  16:	24 c0       	rjmp	.+72     	; 0x60 <__bad_interrupt>
  18:	23 c0       	rjmp	.+70     	; 0x60 <__bad_interrupt>
  1a:	22 c0       	rjmp	.+68     	; 0x60 <__bad_interrupt>
  1c:	37 c5       	rjmp	.+2670   	; 0xa8c <__vector_14>
  1e:	20 c0       	rjmp	.+64     	; 0x60 <__bad_interrupt>
  20:	1f c0       	rjmp	.+62     	; 0x60 <__bad_interrupt>
  22:	1e c0       	rjmp	.+60     	; 0x60 <__bad_interrupt>
  24:	1d c0       	rjmp	.+58     	; 0x60 <__bad_interrupt>
  26:	1c c0       	rjmp	.+56     	; 0x60 <__bad_interrupt>
  28:	1b c0       	rjmp	.+54     	; 0x60 <__bad_interrupt>

0000002a <__ctors_end>:
  2a:	11 24       	eor	r1, r1
  2c:	1f be       	out	0x3f, r1	; 63
  2e:	cf e5       	ldi	r28, 0x5F	; 95
  30:	d2 e0       	ldi	r29, 0x02	; 2
  32:	de bf       	out	0x3e, r29	; 62
  34:	cd bf       	out	0x3d, r28	; 61

00000036 <__do_copy_data>:
  36:	10 e0       	ldi	r17, 0x00	; 0
  38:	a0 e6       	ldi	r26, 0x60	; 96
  3a:	b0 e0       	ldi	r27, 0x00	; 0
  3c:	e2 e3       	ldi	r30, 0x32	; 50
  3e:	fc e0       	ldi	r31, 0x0C	; 12
  40:	02 c0       	rjmp	.+4      	; 0x46 <.do_copy_data_start>

00000042 <.do_copy_data_loop>:
  42:	05 90       	lpm	r0, Z+
  44:	0d 92       	st	X+, r0

00000046 <.do_copy_data_start>:
  46:	aa 37       	cpi	r26, 0x7A	; 122
  48:	b1 07       	cpc	r27, r17
  4a:	d9 f7       	brne	.-10     	; 0x42 <.do_copy_data_loop>

0000004c <__do_clear_bss>:
  4c:	10 e0       	ldi	r17, 0x00	; 0
  4e:	aa e7       	ldi	r26, 0x7A	; 122
  50:	b0 e0       	ldi	r27, 0x00	; 0
  52:	01 c0       	rjmp	.+2      	; 0x56 <.do_clear_bss_start>

00000054 <.do_clear_bss_loop>:
  54:	1d 92       	st	X+, r1

00000056 <.do_clear_bss_start>:
  56:	ae 3d       	cpi	r26, 0xDE	; 222
  58:	b1 07       	cpc	r27, r17
  5a:	e1 f7       	brne	.-8      	; 0x54 <.do_clear_bss_loop>
  5c:	1f d1       	rcall	.+574    	; 0x29c <main>
  5e:	e7 c5       	rjmp	.+3022   	; 0xc2e <_exit>

00000060 <__bad_interrupt>:
  60:	cf cf       	rjmp	.-98     	; 0x0 <__vectors>

00000062 <InitAd>:
	const unsigned int d1_1=114;
	const unsigned int d1_4=213;
    */
    /*============================================*/
void InitAd   (void)
    {
  62:	df 93       	push	r29
  64:	cf 93       	push	r28
  66:	cd b7       	in	r28, 0x3d	; 61
  68:	de b7       	in	r29, 0x3e	; 62
    ADMUX=0x40;//internal Aref with capacitor 0100 0 000 (ADC0, single-ended, gain=1)
  6a:	e7 e2       	ldi	r30, 0x27	; 39
  6c:	f0 e0       	ldi	r31, 0x00	; 0
  6e:	80 e4       	ldi	r24, 0x40	; 64
  70:	80 83       	st	Z, r24
 	CtAd=CtAd0; //63
  72:	80 91 64 00 	lds	r24, 0x0064
  76:	80 93 c2 00 	sts	0x00C2, r24
	NumberAd=0;
  7a:	10 92 85 00 	sts	0x0085, r1
	ADCSRA=0;
  7e:	e6 e2       	ldi	r30, 0x26	; 38
  80:	f0 e0       	ldi	r31, 0x00	; 0
  82:	10 82       	st	Z, r1
	ADCSRA |=(1<<ADEN);/*enable AD*/
  84:	a6 e2       	ldi	r26, 0x26	; 38
  86:	b0 e0       	ldi	r27, 0x00	; 0
  88:	e6 e2       	ldi	r30, 0x26	; 38
  8a:	f0 e0       	ldi	r31, 0x00	; 0
  8c:	80 81       	ld	r24, Z
  8e:	80 68       	ori	r24, 0x80	; 128
  90:	8c 93       	st	X, r24
	ADCSRA |=(1<<ADPS2);
  92:	a6 e2       	ldi	r26, 0x26	; 38
  94:	b0 e0       	ldi	r27, 0x00	; 0
  96:	e6 e2       	ldi	r30, 0x26	; 38
  98:	f0 e0       	ldi	r31, 0x00	; 0
  9a:	80 81       	ld	r24, Z
  9c:	84 60       	ori	r24, 0x04	; 4
  9e:	8c 93       	st	X, r24
    ADCSRA |=(1<<ADPS1);
  a0:	a6 e2       	ldi	r26, 0x26	; 38
  a2:	b0 e0       	ldi	r27, 0x00	; 0
  a4:	e6 e2       	ldi	r30, 0x26	; 38
  a6:	f0 e0       	ldi	r31, 0x00	; 0
  a8:	80 81       	ld	r24, Z
  aa:	82 60       	ori	r24, 0x02	; 2
  ac:	8c 93       	st	X, r24
	ADCSRA |=(1<<ADPS0); //1/128* - 31250 Hz/	 		
  ae:	a6 e2       	ldi	r26, 0x26	; 38
  b0:	b0 e0       	ldi	r27, 0x00	; 0
  b2:	e6 e2       	ldi	r30, 0x26	; 38
  b4:	f0 e0       	ldi	r31, 0x00	; 0
  b6:	80 81       	ld	r24, Z
  b8:	81 60       	ori	r24, 0x01	; 1
  ba:	8c 93       	st	X, r24
    ADCSRA |=(1<<ADSC);/* Start*/
  bc:	a6 e2       	ldi	r26, 0x26	; 38
  be:	b0 e0       	ldi	r27, 0x00	; 0
  c0:	e6 e2       	ldi	r30, 0x26	; 38
  c2:	f0 e0       	ldi	r31, 0x00	; 0
  c4:	80 81       	ld	r24, Z
  c6:	80 64       	ori	r24, 0x40	; 64
  c8:	8c 93       	st	X, r24
    }
  ca:	cf 91       	pop	r28
  cc:	df 91       	pop	r29
  ce:	08 95       	ret

000000d0 <AccountNDiz>:



void AccountNDiz(void)
    {
  d0:	df 93       	push	r29
  d2:	cf 93       	push	r28
  d4:	00 d0       	rcall	.+0      	; 0xd6 <AccountNDiz+0x6>
  d6:	00 d0       	rcall	.+0      	; 0xd8 <AccountNDiz+0x8>
  d8:	00 d0       	rcall	.+0      	; 0xda <AccountNDiz+0xa>
  da:	cd b7       	in	r28, 0x3d	; 61
  dc:	de b7       	in	r29, 0x3e	; 62

    unsigned long R1;
    unsigned char R0;
	unsigned char NDiz_invalid=0;
  de:	19 82       	std	Y+1, r1	; 0x01

		{
	R1=0;
  e0:	1b 82       	std	Y+3, r1	; 0x03
  e2:	1c 82       	std	Y+4, r1	; 0x04
  e4:	1d 82       	std	Y+5, r1	; 0x05
  e6:	1e 82       	std	Y+6, r1	; 0x06
	for(R0=0;R0<=15;++R0)
  e8:	1a 82       	std	Y+2, r1	; 0x02
  ea:	38 c0       	rjmp	.+112    	; 0x15c <AccountNDiz+0x8c>
			{
	if ((TDizTemp[R0]==0xffff)||(TDizTemp[R0]==0)) NDiz_invalid=1; //выставление флага если расчет кол-ва оборотов будет неверный
  ec:	8a 81       	ldd	r24, Y+2	; 0x02
  ee:	88 2f       	mov	r24, r24
  f0:	90 e0       	ldi	r25, 0x00	; 0
  f2:	88 0f       	add	r24, r24
  f4:	99 1f       	adc	r25, r25
  f6:	fc 01       	movw	r30, r24
  f8:	e1 57       	subi	r30, 0x71	; 113
  fa:	ff 4f       	sbci	r31, 0xFF	; 255
  fc:	80 81       	ld	r24, Z
  fe:	91 81       	ldd	r25, Z+1	; 0x01
 100:	2f ef       	ldi	r18, 0xFF	; 255
 102:	8f 3f       	cpi	r24, 0xFF	; 255
 104:	92 07       	cpc	r25, r18
 106:	61 f0       	breq	.+24     	; 0x120 <AccountNDiz+0x50>
 108:	8a 81       	ldd	r24, Y+2	; 0x02
 10a:	88 2f       	mov	r24, r24
 10c:	90 e0       	ldi	r25, 0x00	; 0
 10e:	88 0f       	add	r24, r24
 110:	99 1f       	adc	r25, r25
 112:	fc 01       	movw	r30, r24
 114:	e1 57       	subi	r30, 0x71	; 113
 116:	ff 4f       	sbci	r31, 0xFF	; 255
 118:	80 81       	ld	r24, Z
 11a:	91 81       	ldd	r25, Z+1	; 0x01
 11c:	00 97       	sbiw	r24, 0x00	; 0
 11e:	11 f4       	brne	.+4      	; 0x124 <AccountNDiz+0x54>
 120:	81 e0       	ldi	r24, 0x01	; 1
 122:	89 83       	std	Y+1, r24	; 0x01
    R1+=TDizTemp[R0]; //суммирование всех 16 выборок
 124:	8a 81       	ldd	r24, Y+2	; 0x02
 126:	88 2f       	mov	r24, r24
 128:	90 e0       	ldi	r25, 0x00	; 0
 12a:	88 0f       	add	r24, r24
 12c:	99 1f       	adc	r25, r25
 12e:	fc 01       	movw	r30, r24
 130:	e1 57       	subi	r30, 0x71	; 113
 132:	ff 4f       	sbci	r31, 0xFF	; 255
 134:	80 81       	ld	r24, Z
 136:	91 81       	ldd	r25, Z+1	; 0x01
 138:	9c 01       	movw	r18, r24
 13a:	40 e0       	ldi	r20, 0x00	; 0
 13c:	50 e0       	ldi	r21, 0x00	; 0
 13e:	8b 81       	ldd	r24, Y+3	; 0x03
 140:	9c 81       	ldd	r25, Y+4	; 0x04
 142:	ad 81       	ldd	r26, Y+5	; 0x05
 144:	be 81       	ldd	r27, Y+6	; 0x06
 146:	82 0f       	add	r24, r18
 148:	93 1f       	adc	r25, r19
 14a:	a4 1f       	adc	r26, r20
 14c:	b5 1f       	adc	r27, r21
 14e:	8b 83       	std	Y+3, r24	; 0x03
 150:	9c 83       	std	Y+4, r25	; 0x04
 152:	ad 83       	std	Y+5, r26	; 0x05
 154:	be 83       	std	Y+6, r27	; 0x06
    unsigned char R0;
	unsigned char NDiz_invalid=0;

		{
	R1=0;
	for(R0=0;R0<=15;++R0)
 156:	8a 81       	ldd	r24, Y+2	; 0x02
 158:	8f 5f       	subi	r24, 0xFF	; 255
 15a:	8a 83       	std	Y+2, r24	; 0x02
 15c:	8a 81       	ldd	r24, Y+2	; 0x02
 15e:	80 31       	cpi	r24, 0x10	; 16
 160:	28 f2       	brcs	.-118    	; 0xec <AccountNDiz+0x1c>
			{
	if ((TDizTemp[R0]==0xffff)||(TDizTemp[R0]==0)) NDiz_invalid=1; //выставление флага если расчет кол-ва оборотов будет неверный
    R1+=TDizTemp[R0]; //суммирование всех 16 выборок
			}
	R1>>=4; //вычисление среднего значения
 162:	8b 81       	ldd	r24, Y+3	; 0x03
 164:	9c 81       	ldd	r25, Y+4	; 0x04
 166:	ad 81       	ldd	r26, Y+5	; 0x05
 168:	be 81       	ldd	r27, Y+6	; 0x06
 16a:	68 94       	set
 16c:	13 f8       	bld	r1, 3
 16e:	b6 95       	lsr	r27
 170:	a7 95       	ror	r26
 172:	97 95       	ror	r25
 174:	87 95       	ror	r24
 176:	16 94       	lsr	r1
 178:	d1 f7       	brne	.-12     	; 0x16e <AccountNDiz+0x9e>
 17a:	8b 83       	std	Y+3, r24	; 0x03
 17c:	9c 83       	std	Y+4, r25	; 0x04
 17e:	ad 83       	std	Y+5, r26	; 0x05
 180:	be 83       	std	Y+6, r27	; 0x06
	if ((R1>62330)||(NDiz_Overflow==1)) // если результат больше 62330, или установлен флаг переполнения то обороты = 0
 182:	8b 81       	ldd	r24, Y+3	; 0x03
 184:	9c 81       	ldd	r25, Y+4	; 0x04
 186:	ad 81       	ldd	r26, Y+5	; 0x05
 188:	be 81       	ldd	r27, Y+6	; 0x06
 18a:	8b 37       	cpi	r24, 0x7B	; 123
 18c:	23 ef       	ldi	r18, 0xF3	; 243
 18e:	92 07       	cpc	r25, r18
 190:	20 e0       	ldi	r18, 0x00	; 0
 192:	a2 07       	cpc	r26, r18
 194:	20 e0       	ldi	r18, 0x00	; 0
 196:	b2 07       	cpc	r27, r18
 198:	20 f4       	brcc	.+8      	; 0x1a2 <AccountNDiz+0xd2>
 19a:	80 91 7a 00 	lds	r24, 0x007A
 19e:	81 30       	cpi	r24, 0x01	; 1
 1a0:	29 f4       	brne	.+10     	; 0x1ac <AccountNDiz+0xdc>
	NDiz=0;
 1a2:	10 92 b6 00 	sts	0x00B6, r1
 1a6:	10 92 b5 00 	sts	0x00B5, r1
 1aa:	33 c0       	rjmp	.+102    	; 0x212 <AccountNDiz+0x142>

	else
			{
	if (!NDiz_invalid)
 1ac:	89 81       	ldd	r24, Y+1	; 0x01
 1ae:	88 23       	and	r24, r24
 1b0:	c9 f4       	brne	.+50     	; 0x1e4 <AccountNDiz+0x114>
	{
		R1=8421000/R1;  //R1 = 62330 - 140 оборотов в минуту или 2,33(3) в сек
 1b2:	88 e8       	ldi	r24, 0x88	; 136
 1b4:	9e e7       	ldi	r25, 0x7E	; 126
 1b6:	a0 e8       	ldi	r26, 0x80	; 128
 1b8:	b0 e0       	ldi	r27, 0x00	; 0
 1ba:	2b 81       	ldd	r18, Y+3	; 0x03
 1bc:	3c 81       	ldd	r19, Y+4	; 0x04
 1be:	4d 81       	ldd	r20, Y+5	; 0x05
 1c0:	5e 81       	ldd	r21, Y+6	; 0x06
 1c2:	bc 01       	movw	r22, r24
 1c4:	cd 01       	movw	r24, r26
 1c6:	11 d5       	rcall	.+2594   	; 0xbea <__udivmodsi4>
 1c8:	da 01       	movw	r26, r20
 1ca:	c9 01       	movw	r24, r18
 1cc:	8b 83       	std	Y+3, r24	; 0x03
 1ce:	9c 83       	std	Y+4, r25	; 0x04
 1d0:	ad 83       	std	Y+5, r26	; 0x05
 1d2:	be 83       	std	Y+6, r27	; 0x06
	 	NDiz=R1; 
 1d4:	8b 81       	ldd	r24, Y+3	; 0x03
 1d6:	9c 81       	ldd	r25, Y+4	; 0x04
 1d8:	90 93 b6 00 	sts	0x00B6, r25
 1dc:	80 93 b5 00 	sts	0x00B5, r24
		InvCounter=0; //обнуление счетчика инвалидности
 1e0:	10 92 83 00 	sts	0x0083, r1
	}		//R1 = 2909 - 3000оборотов в минуту или 50 в секунду
	if (NDiz_invalid)
 1e4:	89 81       	ldd	r24, Y+1	; 0x01
 1e6:	88 23       	and	r24, r24
 1e8:	a1 f0       	breq	.+40     	; 0x212 <AccountNDiz+0x142>
	{
		InvCounter++;
 1ea:	80 91 83 00 	lds	r24, 0x0083
 1ee:	8f 5f       	subi	r24, 0xFF	; 255
 1f0:	80 93 83 00 	sts	0x0083, r24
		if (InvCounter>=10) 
 1f4:	80 91 83 00 	lds	r24, 0x0083
 1f8:	8a 30       	cpi	r24, 0x0A	; 10
 1fa:	58 f0       	brcs	.+22     	; 0x212 <AccountNDiz+0x142>
		{
		if (InvCounter>=250) InvCounter = 4; //колцевание
 1fc:	80 91 83 00 	lds	r24, 0x0083
 200:	8a 3f       	cpi	r24, 0xFA	; 250
 202:	18 f0       	brcs	.+6      	; 0x20a <AccountNDiz+0x13a>
 204:	84 e0       	ldi	r24, 0x04	; 4
 206:	80 93 83 00 	sts	0x0083, r24
		NDiz = 0;
 20a:	10 92 b6 00 	sts	0x00B6, r1
 20e:	10 92 b5 00 	sts	0x00B5, r1
					//таймер досчитывает до 5614
					//коэффициент деления=

			}
		}                 
	}
 212:	26 96       	adiw	r28, 0x06	; 6
 214:	0f b6       	in	r0, 0x3f	; 63
 216:	f8 94       	cli
 218:	de bf       	out	0x3e, r29	; 62
 21a:	0f be       	out	0x3f, r0	; 63
 21c:	cd bf       	out	0x3d, r28	; 61
 21e:	cf 91       	pop	r28
 220:	df 91       	pop	r29
 222:	08 95       	ret

00000224 <AccountDd1>:

void AccountDd1   (void)
    {	  
 224:	df 93       	push	r29
 226:	cf 93       	push	r28
 228:	cd b7       	in	r28, 0x3d	; 61
 22a:	de b7       	in	r29, 0x3e	; 62
	Dd1=AdResult[0];
 22c:	80 91 c5 00 	lds	r24, 0x00C5
 230:	90 91 c6 00 	lds	r25, 0x00C6
 234:	90 93 b3 00 	sts	0x00B3, r25
 238:	80 93 b2 00 	sts	0x00B2, r24
	}
 23c:	cf 91       	pop	r28
 23e:	df 91       	pop	r29
 240:	08 95       	ret

00000242 <AccountDt4>:
						    
void AccountDt4   (void)
    {	  
 242:	df 93       	push	r29
 244:	cf 93       	push	r28
 246:	cd b7       	in	r28, 0x3d	; 61
 248:	de b7       	in	r29, 0x3e	; 62
	Dt4=AdResult[1];
 24a:	80 91 c7 00 	lds	r24, 0x00C7
 24e:	90 91 c8 00 	lds	r25, 0x00C8
 252:	90 93 c1 00 	sts	0x00C1, r25
 256:	80 93 c0 00 	sts	0x00C0, r24
	}
 25a:	cf 91       	pop	r28
 25c:	df 91       	pop	r29
 25e:	08 95       	ret

00000260 <AccountDt5>:

void AccountDt5   (void)
    {	  
 260:	df 93       	push	r29
 262:	cf 93       	push	r28
 264:	cd b7       	in	r28, 0x3d	; 61
 266:	de b7       	in	r29, 0x3e	; 62
	Dt5=AdResult[2];
 268:	80 91 c9 00 	lds	r24, 0x00C9
 26c:	90 91 ca 00 	lds	r25, 0x00CA
 270:	90 93 81 00 	sts	0x0081, r25
 274:	80 93 80 00 	sts	0x0080, r24
	}
 278:	cf 91       	pop	r28
 27a:	df 91       	pop	r29
 27c:	08 95       	ret

0000027e <AccountDt6>:
void AccountDt6   (void)
    {	  
 27e:	df 93       	push	r29
 280:	cf 93       	push	r28
 282:	cd b7       	in	r28, 0x3d	; 61
 284:	de b7       	in	r29, 0x3e	; 62
	Dt6=AdResult[3];
 286:	80 91 cb 00 	lds	r24, 0x00CB
 28a:	90 91 cc 00 	lds	r25, 0x00CC
 28e:	90 93 88 00 	sts	0x0088, r25
 292:	80 93 87 00 	sts	0x0087, r24
	}
 296:	cf 91       	pop	r28
 298:	df 91       	pop	r29
 29a:	08 95       	ret

0000029c <main>:
/*++++++++++++++++++++++++++++++++++++++++++*/


    int main(void)
    {
 29c:	df 93       	push	r29
 29e:	cf 93       	push	r28
 2a0:	00 d0       	rcall	.+0      	; 0x2a2 <main+0x6>
 2a2:	00 d0       	rcall	.+0      	; 0x2a4 <main+0x8>
 2a4:	0f 92       	push	r0
 2a6:	cd b7       	in	r28, 0x3d	; 61
 2a8:	de b7       	in	r29, 0x3e	; 62

    DDRB=0xFF;
 2aa:	e7 e3       	ldi	r30, 0x37	; 55
 2ac:	f0 e0       	ldi	r31, 0x00	; 0
 2ae:	8f ef       	ldi	r24, 0xFF	; 255
 2b0:	80 83       	st	Z, r24
	PORTB |= 0xFF;
 2b2:	e8 e3       	ldi	r30, 0x38	; 56
 2b4:	f0 e0       	ldi	r31, 0x00	; 0
 2b6:	20 81       	ld	r18, Z
 2b8:	e8 e3       	ldi	r30, 0x38	; 56
 2ba:	f0 e0       	ldi	r31, 0x00	; 0
 2bc:	8f ef       	ldi	r24, 0xFF	; 255
 2be:	80 83       	st	Z, r24
    DDRC=0xff;
 2c0:	e4 e3       	ldi	r30, 0x34	; 52
 2c2:	f0 e0       	ldi	r31, 0x00	; 0
 2c4:	8f ef       	ldi	r24, 0xFF	; 255
 2c6:	80 83       	st	Z, r24
    PORTC |=0xFF;
 2c8:	e5 e3       	ldi	r30, 0x35	; 53
 2ca:	f0 e0       	ldi	r31, 0x00	; 0
 2cc:	40 81       	ld	r20, Z
 2ce:	e5 e3       	ldi	r30, 0x35	; 53
 2d0:	f0 e0       	ldi	r31, 0x00	; 0
 2d2:	8f ef       	ldi	r24, 0xFF	; 255
 2d4:	80 83       	st	Z, r24

    DDRD=0xbf; //PD6 - Input
 2d6:	e1 e3       	ldi	r30, 0x31	; 49
 2d8:	f0 e0       	ldi	r31, 0x00	; 0
 2da:	8f eb       	ldi	r24, 0xBF	; 191
 2dc:	80 83       	st	Z, r24
    PORTD=0xFF;//transmit=off
 2de:	e2 e3       	ldi	r30, 0x32	; 50
 2e0:	f0 e0       	ldi	r31, 0x00	; 0
 2e2:	8f ef       	ldi	r24, 0xFF	; 255
 2e4:	80 83       	st	Z, r24

	DDRA=0; // ALL inputs
 2e6:	ea e3       	ldi	r30, 0x3A	; 58
 2e8:	f0 e0       	ldi	r31, 0x00	; 0
 2ea:	10 82       	st	Z, r1
	PORTA=0; 
 2ec:	eb e3       	ldi	r30, 0x3B	; 59
 2ee:	f0 e0       	ldi	r31, 0x00	; 0
 2f0:	10 82       	st	Z, r1
	_WDR();
 2f2:	a8 95       	wdr
	 
	InitAd(); 
 2f4:	b6 de       	rcall	.-660    	; 0x62 <InitAd>
	ADCSRA |=(1<<ADIE);//enable AD interrupt 
 2f6:	a6 e2       	ldi	r26, 0x26	; 38
 2f8:	b0 e0       	ldi	r27, 0x00	; 0
 2fa:	e6 e2       	ldi	r30, 0x26	; 38
 2fc:	f0 e0       	ldi	r31, 0x00	; 0
 2fe:	80 81       	ld	r24, Z
 300:	88 60       	ori	r24, 0x08	; 8
 302:	8c 93       	st	X, r24
	sei(); //enable global interrupt
 304:	78 94       	sei

    SPCR=0x0;// disable SPI
 306:	ed e2       	ldi	r30, 0x2D	; 45
 308:	f0 e0       	ldi	r31, 0x00	; 0
 30a:	10 82       	st	Z, r1
    SPSR=0;  //
 30c:	ee e2       	ldi	r30, 0x2E	; 46
 30e:	f0 e0       	ldi	r31, 0x00	; 0
 310:	10 82       	st	Z, r1
		

    TIMSK=TIMSK | 0x20;//enable Int capture1
 312:	a9 e5       	ldi	r26, 0x59	; 89
 314:	b0 e0       	ldi	r27, 0x00	; 0
 316:	e9 e5       	ldi	r30, 0x59	; 89
 318:	f0 e0       	ldi	r31, 0x00	; 0
 31a:	80 81       	ld	r24, Z
 31c:	80 62       	ori	r24, 0x20	; 32
 31e:	8c 93       	st	X, r24
    TCCR1B=0xc1;//0.0625mkc 
 320:	ee e4       	ldi	r30, 0x4E	; 78
 322:	f0 e0       	ldi	r31, 0x00	; 0
 324:	81 ec       	ldi	r24, 0xC1	; 193
 326:	80 83       	st	Z, r24
	// noise canceller enable input capture select=1 
	// prescaler source=001
    TIMSK=TIMSK | 0x4;//enable Int overlowT1
 328:	a9 e5       	ldi	r26, 0x59	; 89
 32a:	b0 e0       	ldi	r27, 0x00	; 0
 32c:	e9 e5       	ldi	r30, 0x59	; 89
 32e:	f0 e0       	ldi	r31, 0x00	; 0
 330:	80 81       	ld	r24, Z
 332:	84 60       	ori	r24, 0x04	; 4
 334:	8c 93       	st	X, r24

	TCCR2 =1; //2 timer Clock select=001
 336:	e5 e4       	ldi	r30, 0x45	; 69
 338:	f0 e0       	ldi	r31, 0x00	; 0
 33a:	81 e0       	ldi	r24, 0x01	; 1
 33c:	80 83       	st	Z, r24
	TCNT2=5;//4000mks значение таймера 2
 33e:	e4 e4       	ldi	r30, 0x44	; 68
 340:	f0 e0       	ldi	r31, 0x00	; 0
 342:	85 e0       	ldi	r24, 0x05	; 5
 344:	80 83       	st	Z, r24
	TIFR |=0x40; //T2 overflow flag=1 output compare=0
 346:	a8 e5       	ldi	r26, 0x58	; 88
 348:	b0 e0       	ldi	r27, 0x00	; 0
 34a:	e8 e5       	ldi	r30, 0x58	; 88
 34c:	f0 e0       	ldi	r31, 0x00	; 0
 34e:	80 81       	ld	r24, Z
 350:	80 64       	ori	r24, 0x40	; 64
 352:	8c 93       	st	X, r24

Dt4_8=0; 
 354:	10 92 c3 00 	sts	0x00C3, r1
Dt4_30=0; Dt4_37=0; Dt5_37=0; Dt5_95=0; Dt5_118=0;
 358:	10 92 8e 00 	sts	0x008E, r1
 35c:	10 92 86 00 	sts	0x0086, r1
 360:	10 92 b4 00 	sts	0x00B4, r1
 364:	10 92 b1 00 	sts	0x00B1, r1
 368:	10 92 c4 00 	sts	0x00C4, r1
Dt6_115=0;
 36c:	10 92 7c 00 	sts	0x007C, r1
Dd1_1=0;
 370:	10 92 82 00 	sts	0x0082, r1
Dd1_4=0; Nd_500=0; Nd_1450=0; Nd_1750=0;  
 374:	10 92 8d 00 	sts	0x008D, r1
 378:	10 92 dd 00 	sts	0x00DD, r1
 37c:	10 92 b8 00 	sts	0x00B8, r1
 380:	10 92 8a 00 	sts	0x008A, r1

	NDiz=0;
 384:	10 92 b6 00 	sts	0x00B6, r1
 388:	10 92 b5 00 	sts	0x00B5, r1
	CtTDiz=15;
 38c:	8f e0       	ldi	r24, 0x0F	; 15
 38e:	80 93 89 00 	sts	0x0089, r24
	InvCounter=0;
 392:	10 92 83 00 	sts	0x0083, r1
    RegWait=30000; //старое значение - 300 //Вернуть!!
 396:	80 e3       	ldi	r24, 0x30	; 48
 398:	95 e7       	ldi	r25, 0x75	; 117
 39a:	90 93 b0 00 	sts	0x00B0, r25
 39e:	80 93 af 00 	sts	0x00AF, r24
 3a2:	01 c0       	rjmp	.+2      	; 0x3a6 <main+0x10a>
	while(RegWait--)
    _WDR();
 3a4:	a8 95       	wdr

	NDiz=0;
	CtTDiz=15;
	InvCounter=0;
    RegWait=30000; //старое значение - 300 //Вернуть!!
	while(RegWait--)
 3a6:	80 91 af 00 	lds	r24, 0x00AF
 3aa:	90 91 b0 00 	lds	r25, 0x00B0
 3ae:	9b 83       	std	Y+3, r25	; 0x03
 3b0:	8a 83       	std	Y+2, r24	; 0x02
 3b2:	19 82       	std	Y+1, r1	; 0x01
 3b4:	4a 81       	ldd	r20, Y+2	; 0x02
 3b6:	5b 81       	ldd	r21, Y+3	; 0x03
 3b8:	41 15       	cp	r20, r1
 3ba:	51 05       	cpc	r21, r1
 3bc:	11 f0       	breq	.+4      	; 0x3c2 <main+0x126>
 3be:	51 e0       	ldi	r21, 0x01	; 1
 3c0:	59 83       	std	Y+1, r21	; 0x01
 3c2:	8a 81       	ldd	r24, Y+2	; 0x02
 3c4:	9b 81       	ldd	r25, Y+3	; 0x03
 3c6:	01 97       	sbiw	r24, 0x01	; 1
 3c8:	90 93 b0 00 	sts	0x00B0, r25
 3cc:	80 93 af 00 	sts	0x00AF, r24
 3d0:	89 81       	ldd	r24, Y+1	; 0x01
 3d2:	88 23       	and	r24, r24
 3d4:	39 f7       	brne	.-50     	; 0x3a4 <main+0x108>

						       
 /*Work program*/     	 
    while(1)
    {
    _WDR();
 3d6:	a8 95       	wdr
	AccountDd1();
 3d8:	25 df       	rcall	.-438    	; 0x224 <AccountDd1>
	AccountDt4();
 3da:	33 df       	rcall	.-410    	; 0x242 <AccountDt4>
	AccountDt5();
 3dc:	41 df       	rcall	.-382    	; 0x260 <AccountDt5>
	AccountDt6();
 3de:	4f df       	rcall	.-354    	; 0x27e <AccountDt6>
	AccountNDiz();
 3e0:	77 de       	rcall	.-786    	; 0xd0 <AccountNDiz>


	if((NDiz>=500)&&(!Nd_500)) Nd_500=1; 
 3e2:	80 91 b5 00 	lds	r24, 0x00B5
 3e6:	90 91 b6 00 	lds	r25, 0x00B6
 3ea:	21 e0       	ldi	r18, 0x01	; 1
 3ec:	84 3f       	cpi	r24, 0xF4	; 244
 3ee:	92 07       	cpc	r25, r18
 3f0:	38 f0       	brcs	.+14     	; 0x400 <main+0x164>
 3f2:	80 91 dd 00 	lds	r24, 0x00DD
 3f6:	88 23       	and	r24, r24
 3f8:	19 f4       	brne	.+6      	; 0x400 <main+0x164>
 3fa:	81 e0       	ldi	r24, 0x01	; 1
 3fc:	80 93 dd 00 	sts	0x00DD, r24
	if((NDiz<=400)&&(Nd_500)) Nd_500=0;
 400:	80 91 b5 00 	lds	r24, 0x00B5
 404:	90 91 b6 00 	lds	r25, 0x00B6
 408:	41 e0       	ldi	r20, 0x01	; 1
 40a:	81 39       	cpi	r24, 0x91	; 145
 40c:	94 07       	cpc	r25, r20
 40e:	30 f4       	brcc	.+12     	; 0x41c <main+0x180>
 410:	80 91 dd 00 	lds	r24, 0x00DD
 414:	88 23       	and	r24, r24
 416:	11 f0       	breq	.+4      	; 0x41c <main+0x180>
 418:	10 92 dd 00 	sts	0x00DD, r1

	if((NDiz>=1450)&&(!Nd_1450)) Nd_1450=1; 
 41c:	80 91 b5 00 	lds	r24, 0x00B5
 420:	90 91 b6 00 	lds	r25, 0x00B6
 424:	55 e0       	ldi	r21, 0x05	; 5
 426:	8a 3a       	cpi	r24, 0xAA	; 170
 428:	95 07       	cpc	r25, r21
 42a:	38 f0       	brcs	.+14     	; 0x43a <main+0x19e>
 42c:	80 91 b8 00 	lds	r24, 0x00B8
 430:	88 23       	and	r24, r24
 432:	19 f4       	brne	.+6      	; 0x43a <main+0x19e>
 434:	81 e0       	ldi	r24, 0x01	; 1
 436:	80 93 b8 00 	sts	0x00B8, r24
	if((NDiz<=1350)&&(Nd_1450)) Nd_1450=0;
 43a:	80 91 b5 00 	lds	r24, 0x00B5
 43e:	90 91 b6 00 	lds	r25, 0x00B6
 442:	25 e0       	ldi	r18, 0x05	; 5
 444:	87 34       	cpi	r24, 0x47	; 71
 446:	92 07       	cpc	r25, r18
 448:	30 f4       	brcc	.+12     	; 0x456 <main+0x1ba>
 44a:	80 91 b8 00 	lds	r24, 0x00B8
 44e:	88 23       	and	r24, r24
 450:	11 f0       	breq	.+4      	; 0x456 <main+0x1ba>
 452:	10 92 b8 00 	sts	0x00B8, r1

	if((NDiz>=1750)&&(!Nd_1750)) Nd_1750=1; 
 456:	80 91 b5 00 	lds	r24, 0x00B5
 45a:	90 91 b6 00 	lds	r25, 0x00B6
 45e:	46 e0       	ldi	r20, 0x06	; 6
 460:	86 3d       	cpi	r24, 0xD6	; 214
 462:	94 07       	cpc	r25, r20
 464:	38 f0       	brcs	.+14     	; 0x474 <main+0x1d8>
 466:	80 91 8a 00 	lds	r24, 0x008A
 46a:	88 23       	and	r24, r24
 46c:	19 f4       	brne	.+6      	; 0x474 <main+0x1d8>
 46e:	81 e0       	ldi	r24, 0x01	; 1
 470:	80 93 8a 00 	sts	0x008A, r24
	if((NDiz<=1650)&&(Nd_1750)) Nd_1750=0; //100 оборотов гистерезис
 474:	80 91 b5 00 	lds	r24, 0x00B5
 478:	90 91 b6 00 	lds	r25, 0x00B6
 47c:	56 e0       	ldi	r21, 0x06	; 6
 47e:	83 37       	cpi	r24, 0x73	; 115
 480:	95 07       	cpc	r25, r21
 482:	30 f4       	brcc	.+12     	; 0x490 <main+0x1f4>
 484:	80 91 8a 00 	lds	r24, 0x008A
 488:	88 23       	and	r24, r24
 48a:	11 f0       	breq	.+4      	; 0x490 <main+0x1f4>
 48c:	10 92 8a 00 	sts	0x008A, r1

	
	if((Dd1>=d1_1)&&(!Dd1_1)) Dd1_1=1; //выше 1 кг/см кв определить пределы направление срабатывания - вверх
 490:	20 91 b2 00 	lds	r18, 0x00B2
 494:	30 91 b3 00 	lds	r19, 0x00B3
 498:	80 91 75 00 	lds	r24, 0x0075
 49c:	90 91 76 00 	lds	r25, 0x0076
 4a0:	28 17       	cp	r18, r24
 4a2:	39 07       	cpc	r19, r25
 4a4:	38 f0       	brcs	.+14     	; 0x4b4 <main+0x218>
 4a6:	80 91 82 00 	lds	r24, 0x0082
 4aa:	88 23       	and	r24, r24
 4ac:	19 f4       	brne	.+6      	; 0x4b4 <main+0x218>
 4ae:	81 e0       	ldi	r24, 0x01	; 1
 4b0:	80 93 82 00 	sts	0x0082, r24
	if((Dd1<=d1_1-Hyst_p)&&(Dd1_1)) Dd1_1=0; // ниже 1 кг/см кв
 4b4:	20 91 75 00 	lds	r18, 0x0075
 4b8:	30 91 76 00 	lds	r19, 0x0076
 4bc:	80 91 66 00 	lds	r24, 0x0066
 4c0:	88 2f       	mov	r24, r24
 4c2:	90 e0       	ldi	r25, 0x00	; 0
 4c4:	28 1b       	sub	r18, r24
 4c6:	39 0b       	sbc	r19, r25
 4c8:	80 91 b2 00 	lds	r24, 0x00B2
 4cc:	90 91 b3 00 	lds	r25, 0x00B3
 4d0:	28 17       	cp	r18, r24
 4d2:	39 07       	cpc	r19, r25
 4d4:	30 f0       	brcs	.+12     	; 0x4e2 <main+0x246>
 4d6:	80 91 82 00 	lds	r24, 0x0082
 4da:	88 23       	and	r24, r24
 4dc:	11 f0       	breq	.+4      	; 0x4e2 <main+0x246>
 4de:	10 92 82 00 	sts	0x0082, r1

	if((Dd1>=d1_4+Hyst_p)&&(!Dd1_4)) Dd1_4=1; //выше 4 кг/см кв определить пределы
 4e2:	80 91 66 00 	lds	r24, 0x0066
 4e6:	28 2f       	mov	r18, r24
 4e8:	30 e0       	ldi	r19, 0x00	; 0
 4ea:	80 91 77 00 	lds	r24, 0x0077
 4ee:	90 91 78 00 	lds	r25, 0x0078
 4f2:	28 0f       	add	r18, r24
 4f4:	39 1f       	adc	r19, r25
 4f6:	80 91 b2 00 	lds	r24, 0x00B2
 4fa:	90 91 b3 00 	lds	r25, 0x00B3
 4fe:	82 17       	cp	r24, r18
 500:	93 07       	cpc	r25, r19
 502:	38 f0       	brcs	.+14     	; 0x512 <main+0x276>
 504:	80 91 8d 00 	lds	r24, 0x008D
 508:	88 23       	and	r24, r24
 50a:	19 f4       	brne	.+6      	; 0x512 <main+0x276>
 50c:	81 e0       	ldi	r24, 0x01	; 1
 50e:	80 93 8d 00 	sts	0x008D, r24
	if((Dd1<=d1_4)&&(Dd1_4)) Dd1_4=0;  //ниже 4 кг/см кв определить пределы 10 - гистерезис вниз направление срабатывания - вниз
 512:	20 91 b2 00 	lds	r18, 0x00B2
 516:	30 91 b3 00 	lds	r19, 0x00B3
 51a:	80 91 77 00 	lds	r24, 0x0077
 51e:	90 91 78 00 	lds	r25, 0x0078
 522:	82 17       	cp	r24, r18
 524:	93 07       	cpc	r25, r19
 526:	30 f0       	brcs	.+12     	; 0x534 <main+0x298>
 528:	80 91 8d 00 	lds	r24, 0x008D
 52c:	88 23       	and	r24, r24
 52e:	11 f0       	breq	.+4      	; 0x534 <main+0x298>
 530:	10 92 8d 00 	sts	0x008D, r1
	
	if((Dt4<=t4_8-Hyst_t)&&(!Dt4_8)) Dt4_8=1; //выше 9.5 градусов направление срабатывания - вверх
 534:	20 91 67 00 	lds	r18, 0x0067
 538:	30 91 68 00 	lds	r19, 0x0068
 53c:	80 91 65 00 	lds	r24, 0x0065
 540:	88 2f       	mov	r24, r24
 542:	90 e0       	ldi	r25, 0x00	; 0
 544:	28 1b       	sub	r18, r24
 546:	39 0b       	sbc	r19, r25
 548:	80 91 c0 00 	lds	r24, 0x00C0
 54c:	90 91 c1 00 	lds	r25, 0x00C1
 550:	28 17       	cp	r18, r24
 552:	39 07       	cpc	r19, r25
 554:	38 f0       	brcs	.+14     	; 0x564 <main+0x2c8>
 556:	80 91 c3 00 	lds	r24, 0x00C3
 55a:	88 23       	and	r24, r24
 55c:	19 f4       	brne	.+6      	; 0x564 <main+0x2c8>
 55e:	81 e0       	ldi	r24, 0x01	; 1
 560:	80 93 c3 00 	sts	0x00C3, r24
	if((Dt4>=(t4_8))&&(Dt4_8)) Dt4_8=0; //ниже 8 градусов
 564:	20 91 c0 00 	lds	r18, 0x00C0
 568:	30 91 c1 00 	lds	r19, 0x00C1
 56c:	80 91 67 00 	lds	r24, 0x0067
 570:	90 91 68 00 	lds	r25, 0x0068
 574:	28 17       	cp	r18, r24
 576:	39 07       	cpc	r19, r25
 578:	30 f0       	brcs	.+12     	; 0x586 <main+0x2ea>
 57a:	80 91 c3 00 	lds	r24, 0x00C3
 57e:	88 23       	and	r24, r24
 580:	11 f0       	breq	.+4      	; 0x586 <main+0x2ea>
 582:	10 92 c3 00 	sts	0x00C3, r1

	if((Dt4<=(t4_30-Hyst_t))&&(!Dt4_30)) Dt4_30=1; //выше 31.25 градусов
 586:	20 91 69 00 	lds	r18, 0x0069
 58a:	30 91 6a 00 	lds	r19, 0x006A
 58e:	80 91 65 00 	lds	r24, 0x0065
 592:	88 2f       	mov	r24, r24
 594:	90 e0       	ldi	r25, 0x00	; 0
 596:	28 1b       	sub	r18, r24
 598:	39 0b       	sbc	r19, r25
 59a:	80 91 c0 00 	lds	r24, 0x00C0
 59e:	90 91 c1 00 	lds	r25, 0x00C1
 5a2:	28 17       	cp	r18, r24
 5a4:	39 07       	cpc	r19, r25
 5a6:	38 f0       	brcs	.+14     	; 0x5b6 <main+0x31a>
 5a8:	80 91 8e 00 	lds	r24, 0x008E
 5ac:	88 23       	and	r24, r24
 5ae:	19 f4       	brne	.+6      	; 0x5b6 <main+0x31a>
 5b0:	81 e0       	ldi	r24, 0x01	; 1
 5b2:	80 93 8e 00 	sts	0x008E, r24
	if((Dt4>=(t4_30))&&(Dt4_30)) Dt4_30=0; //ниже 30 градусов - гистерезис направление срабатывания - вверх
 5b6:	20 91 c0 00 	lds	r18, 0x00C0
 5ba:	30 91 c1 00 	lds	r19, 0x00C1
 5be:	80 91 69 00 	lds	r24, 0x0069
 5c2:	90 91 6a 00 	lds	r25, 0x006A
 5c6:	28 17       	cp	r18, r24
 5c8:	39 07       	cpc	r19, r25
 5ca:	30 f0       	brcs	.+12     	; 0x5d8 <main+0x33c>
 5cc:	80 91 8e 00 	lds	r24, 0x008E
 5d0:	88 23       	and	r24, r24
 5d2:	11 f0       	breq	.+4      	; 0x5d8 <main+0x33c>
 5d4:	10 92 8e 00 	sts	0x008E, r1

	if((Dt4<=t4_37)&&(!Dt4_37)) Dt4_37=1; //выше 37.0 градусов
 5d8:	20 91 c0 00 	lds	r18, 0x00C0
 5dc:	30 91 c1 00 	lds	r19, 0x00C1
 5e0:	80 91 6b 00 	lds	r24, 0x006B
 5e4:	90 91 6c 00 	lds	r25, 0x006C
 5e8:	82 17       	cp	r24, r18
 5ea:	93 07       	cpc	r25, r19
 5ec:	38 f0       	brcs	.+14     	; 0x5fc <main+0x360>
 5ee:	80 91 86 00 	lds	r24, 0x0086
 5f2:	88 23       	and	r24, r24
 5f4:	19 f4       	brne	.+6      	; 0x5fc <main+0x360>
 5f6:	81 e0       	ldi	r24, 0x01	; 1
 5f8:	80 93 86 00 	sts	0x0086, r24
	if((Dt4>=(t4_37+Hyst_t))&&(Dt4_37)) Dt4_37=0; //ниже 36,8 градусов направление срабатывания - вниз
 5fc:	80 91 65 00 	lds	r24, 0x0065
 600:	28 2f       	mov	r18, r24
 602:	30 e0       	ldi	r19, 0x00	; 0
 604:	80 91 6b 00 	lds	r24, 0x006B
 608:	90 91 6c 00 	lds	r25, 0x006C
 60c:	28 0f       	add	r18, r24
 60e:	39 1f       	adc	r19, r25
 610:	80 91 c0 00 	lds	r24, 0x00C0
 614:	90 91 c1 00 	lds	r25, 0x00C1
 618:	82 17       	cp	r24, r18
 61a:	93 07       	cpc	r25, r19
 61c:	30 f0       	brcs	.+12     	; 0x62a <main+0x38e>
 61e:	80 91 86 00 	lds	r24, 0x0086
 622:	88 23       	and	r24, r24
 624:	11 f0       	breq	.+4      	; 0x62a <main+0x38e>
 626:	10 92 86 00 	sts	0x0086, r1

	if((Dt5<=t5_37-(Hyst_t+20))&&(!Dt5_37)) Dt5_37=1; //выше 44.5 градусов
 62a:	20 91 6d 00 	lds	r18, 0x006D
 62e:	30 91 6e 00 	lds	r19, 0x006E
 632:	80 91 65 00 	lds	r24, 0x0065
 636:	88 2f       	mov	r24, r24
 638:	90 e0       	ldi	r25, 0x00	; 0
 63a:	a9 01       	movw	r20, r18
 63c:	48 1b       	sub	r20, r24
 63e:	59 0b       	sbc	r21, r25
 640:	ca 01       	movw	r24, r20
 642:	9c 01       	movw	r18, r24
 644:	24 51       	subi	r18, 0x14	; 20
 646:	30 40       	sbci	r19, 0x00	; 0
 648:	80 91 80 00 	lds	r24, 0x0080
 64c:	90 91 81 00 	lds	r25, 0x0081
 650:	28 17       	cp	r18, r24
 652:	39 07       	cpc	r19, r25
 654:	38 f0       	brcs	.+14     	; 0x664 <main+0x3c8>
 656:	80 91 b4 00 	lds	r24, 0x00B4
 65a:	88 23       	and	r24, r24
 65c:	19 f4       	brne	.+6      	; 0x664 <main+0x3c8>
 65e:	81 e0       	ldi	r24, 0x01	; 1
 660:	80 93 b4 00 	sts	0x00B4, r24
	if((Dt5>=(t5_37))&&(Dt5_37)) Dt5_37=0; //ниже 37 градусов направление срабатывания - вверх
 664:	20 91 80 00 	lds	r18, 0x0080
 668:	30 91 81 00 	lds	r19, 0x0081
 66c:	80 91 6d 00 	lds	r24, 0x006D
 670:	90 91 6e 00 	lds	r25, 0x006E
 674:	28 17       	cp	r18, r24
 676:	39 07       	cpc	r19, r25
 678:	30 f0       	brcs	.+12     	; 0x686 <main+0x3ea>
 67a:	80 91 b4 00 	lds	r24, 0x00B4
 67e:	88 23       	and	r24, r24
 680:	11 f0       	breq	.+4      	; 0x686 <main+0x3ea>
 682:	10 92 b4 00 	sts	0x00B4, r1

	if((Dt5<=t5_95)&&(!Dt5_95)) Dt5_95=1; //выше 95 градусов
 686:	20 91 80 00 	lds	r18, 0x0080
 68a:	30 91 81 00 	lds	r19, 0x0081
 68e:	80 91 6f 00 	lds	r24, 0x006F
 692:	90 91 70 00 	lds	r25, 0x0070
 696:	82 17       	cp	r24, r18
 698:	93 07       	cpc	r25, r19
 69a:	38 f0       	brcs	.+14     	; 0x6aa <main+0x40e>
 69c:	80 91 b1 00 	lds	r24, 0x00B1
 6a0:	88 23       	and	r24, r24
 6a2:	19 f4       	brne	.+6      	; 0x6aa <main+0x40e>
 6a4:	81 e0       	ldi	r24, 0x01	; 1
 6a6:	80 93 b1 00 	sts	0x00B1, r24
	if((Dt5>=(t5_95+Hyst_t))&&(Dt5_95)) Dt5_95=0; //ниже 93.5 градусов направление срабатывания - вверх
 6aa:	80 91 65 00 	lds	r24, 0x0065
 6ae:	28 2f       	mov	r18, r24
 6b0:	30 e0       	ldi	r19, 0x00	; 0
 6b2:	80 91 6f 00 	lds	r24, 0x006F
 6b6:	90 91 70 00 	lds	r25, 0x0070
 6ba:	28 0f       	add	r18, r24
 6bc:	39 1f       	adc	r19, r25
 6be:	80 91 80 00 	lds	r24, 0x0080
 6c2:	90 91 81 00 	lds	r25, 0x0081
 6c6:	82 17       	cp	r24, r18
 6c8:	93 07       	cpc	r25, r19
 6ca:	30 f0       	brcs	.+12     	; 0x6d8 <main+0x43c>
 6cc:	80 91 b1 00 	lds	r24, 0x00B1
 6d0:	88 23       	and	r24, r24
 6d2:	11 f0       	breq	.+4      	; 0x6d8 <main+0x43c>
 6d4:	10 92 b1 00 	sts	0x00B1, r1

	if((Dt5<=t5_118)&&(!Dt5_118)) Dt5_118=1; //выше 118 градусов
 6d8:	20 91 80 00 	lds	r18, 0x0080
 6dc:	30 91 81 00 	lds	r19, 0x0081
 6e0:	80 91 73 00 	lds	r24, 0x0073
 6e4:	90 91 74 00 	lds	r25, 0x0074
 6e8:	82 17       	cp	r24, r18
 6ea:	93 07       	cpc	r25, r19
 6ec:	38 f0       	brcs	.+14     	; 0x6fc <main+0x460>
 6ee:	80 91 c4 00 	lds	r24, 0x00C4
 6f2:	88 23       	and	r24, r24
 6f4:	19 f4       	brne	.+6      	; 0x6fc <main+0x460>
 6f6:	81 e0       	ldi	r24, 0x01	; 1
 6f8:	80 93 c4 00 	sts	0x00C4, r24
	if((Dt5>=(t5_118+Hyst_t))&&(Dt5_118)) Dt5_118=0; //ниже 116.5 градусов направление срабатывания - вверх
 6fc:	80 91 65 00 	lds	r24, 0x0065
 700:	28 2f       	mov	r18, r24
 702:	30 e0       	ldi	r19, 0x00	; 0
 704:	80 91 73 00 	lds	r24, 0x0073
 708:	90 91 74 00 	lds	r25, 0x0074
 70c:	28 0f       	add	r18, r24
 70e:	39 1f       	adc	r19, r25
 710:	80 91 80 00 	lds	r24, 0x0080
 714:	90 91 81 00 	lds	r25, 0x0081
 718:	82 17       	cp	r24, r18
 71a:	93 07       	cpc	r25, r19
 71c:	30 f0       	brcs	.+12     	; 0x72a <main+0x48e>
 71e:	80 91 c4 00 	lds	r24, 0x00C4
 722:	88 23       	and	r24, r24
 724:	11 f0       	breq	.+4      	; 0x72a <main+0x48e>
 726:	10 92 c4 00 	sts	0x00C4, r1


	if((Dt6<=t6_115)&&(!Dt6_115)) Dt6_115=1; //выше 115 градусов
 72a:	20 91 87 00 	lds	r18, 0x0087
 72e:	30 91 88 00 	lds	r19, 0x0088
 732:	80 91 71 00 	lds	r24, 0x0071
 736:	90 91 72 00 	lds	r25, 0x0072
 73a:	82 17       	cp	r24, r18
 73c:	93 07       	cpc	r25, r19
 73e:	38 f0       	brcs	.+14     	; 0x74e <main+0x4b2>
 740:	80 91 7c 00 	lds	r24, 0x007C
 744:	88 23       	and	r24, r24
 746:	19 f4       	brne	.+6      	; 0x74e <main+0x4b2>
 748:	81 e0       	ldi	r24, 0x01	; 1
 74a:	80 93 7c 00 	sts	0x007C, r24
	if((Dt6>=(t6_115+Hyst_t))&&(Dt6_115)) Dt6_115=0; //ниже 113.5 градусов направление срабатывания - вверх
 74e:	80 91 65 00 	lds	r24, 0x0065
 752:	28 2f       	mov	r18, r24
 754:	30 e0       	ldi	r19, 0x00	; 0
 756:	80 91 71 00 	lds	r24, 0x0071
 75a:	90 91 72 00 	lds	r25, 0x0072
 75e:	28 0f       	add	r18, r24
 760:	39 1f       	adc	r19, r25
 762:	80 91 87 00 	lds	r24, 0x0087
 766:	90 91 88 00 	lds	r25, 0x0088
 76a:	82 17       	cp	r24, r18
 76c:	93 07       	cpc	r25, r19
 76e:	30 f0       	brcs	.+12     	; 0x77c <main+0x4e0>
 770:	80 91 7c 00 	lds	r24, 0x007C
 774:	88 23       	and	r24, r24
 776:	11 f0       	breq	.+4      	; 0x77c <main+0x4e0>
 778:	10 92 7c 00 	sts	0x007C, r1


	if(!Nd_500)  
 77c:	80 91 dd 00 	lds	r24, 0x00DD
 780:	88 23       	and	r24, r24
 782:	41 f4       	brne	.+16     	; 0x794 <main+0x4f8>
	 PORTD &=  0xFB;
 784:	a2 e3       	ldi	r26, 0x32	; 50
 786:	b0 e0       	ldi	r27, 0x00	; 0
 788:	e2 e3       	ldi	r30, 0x32	; 50
 78a:	f0 e0       	ldi	r31, 0x00	; 0
 78c:	80 81       	ld	r24, Z
 78e:	8b 7f       	andi	r24, 0xFB	; 251
 790:	8c 93       	st	X, r24
 792:	07 c0       	rjmp	.+14     	; 0x7a2 <main+0x506>
	 else   PORTD |= 0x04; //PD5-выше 500
 794:	a2 e3       	ldi	r26, 0x32	; 50
 796:	b0 e0       	ldi	r27, 0x00	; 0
 798:	e2 e3       	ldi	r30, 0x32	; 50
 79a:	f0 e0       	ldi	r31, 0x00	; 0
 79c:	80 81       	ld	r24, Z
 79e:	84 60       	ori	r24, 0x04	; 4
 7a0:	8c 93       	st	X, r24

	if(!Nd_1450) 
 7a2:	80 91 b8 00 	lds	r24, 0x00B8
 7a6:	88 23       	and	r24, r24
 7a8:	41 f4       	brne	.+16     	; 0x7ba <main+0x51e>
	 PORTD &=  0xEF;
 7aa:	a2 e3       	ldi	r26, 0x32	; 50
 7ac:	b0 e0       	ldi	r27, 0x00	; 0
 7ae:	e2 e3       	ldi	r30, 0x32	; 50
 7b0:	f0 e0       	ldi	r31, 0x00	; 0
 7b2:	80 81       	ld	r24, Z
 7b4:	8f 7e       	andi	r24, 0xEF	; 239
 7b6:	8c 93       	st	X, r24
 7b8:	07 c0       	rjmp	.+14     	; 0x7c8 <main+0x52c>
	  else PORTD |= 0x10;  //PD4-выше 1450
 7ba:	a2 e3       	ldi	r26, 0x32	; 50
 7bc:	b0 e0       	ldi	r27, 0x00	; 0
 7be:	e2 e3       	ldi	r30, 0x32	; 50
 7c0:	f0 e0       	ldi	r31, 0x00	; 0
 7c2:	80 81       	ld	r24, Z
 7c4:	80 61       	ori	r24, 0x10	; 16
 7c6:	8c 93       	st	X, r24
	if(Nd_1750) 
 7c8:	80 91 8a 00 	lds	r24, 0x008A
 7cc:	88 23       	and	r24, r24
 7ce:	41 f0       	breq	.+16     	; 0x7e0 <main+0x544>
	 PORTC &=  0xDF; 
 7d0:	a5 e3       	ldi	r26, 0x35	; 53
 7d2:	b0 e0       	ldi	r27, 0x00	; 0
 7d4:	e5 e3       	ldi	r30, 0x35	; 53
 7d6:	f0 e0       	ldi	r31, 0x00	; 0
 7d8:	80 81       	ld	r24, Z
 7da:	8f 7d       	andi	r24, 0xDF	; 223
 7dc:	8c 93       	st	X, r24
 7de:	07 c0       	rjmp	.+14     	; 0x7ee <main+0x552>
	 else PORTC |= 0x20;  //PC5-выше 1750            
 7e0:	a5 e3       	ldi	r26, 0x35	; 53
 7e2:	b0 e0       	ldi	r27, 0x00	; 0
 7e4:	e5 e3       	ldi	r30, 0x35	; 53
 7e6:	f0 e0       	ldi	r31, 0x00	; 0
 7e8:	80 81       	ld	r24, Z
 7ea:	80 62       	ori	r24, 0x20	; 32
 7ec:	8c 93       	st	X, r24


	if(!Dd1_1)   PORTD &=  0xFE; else PORTD |= 0x01;  //PD0 - выше 1 кг 
 7ee:	80 91 82 00 	lds	r24, 0x0082
 7f2:	88 23       	and	r24, r24
 7f4:	41 f4       	brne	.+16     	; 0x806 <main+0x56a>
 7f6:	a2 e3       	ldi	r26, 0x32	; 50
 7f8:	b0 e0       	ldi	r27, 0x00	; 0
 7fa:	e2 e3       	ldi	r30, 0x32	; 50
 7fc:	f0 e0       	ldi	r31, 0x00	; 0
 7fe:	80 81       	ld	r24, Z
 800:	8e 7f       	andi	r24, 0xFE	; 254
 802:	8c 93       	st	X, r24
 804:	07 c0       	rjmp	.+14     	; 0x814 <main+0x578>
 806:	a2 e3       	ldi	r26, 0x32	; 50
 808:	b0 e0       	ldi	r27, 0x00	; 0
 80a:	e2 e3       	ldi	r30, 0x32	; 50
 80c:	f0 e0       	ldi	r31, 0x00	; 0
 80e:	80 81       	ld	r24, Z
 810:	81 60       	ori	r24, 0x01	; 1
 812:	8c 93       	st	X, r24
	if(Dd1_4)    PORTD &=  0xFD; else PORTD |= 0x02;  //PD1 - ниже 4 кг
 814:	80 91 8d 00 	lds	r24, 0x008D
 818:	88 23       	and	r24, r24
 81a:	41 f0       	breq	.+16     	; 0x82c <main+0x590>
 81c:	a2 e3       	ldi	r26, 0x32	; 50
 81e:	b0 e0       	ldi	r27, 0x00	; 0
 820:	e2 e3       	ldi	r30, 0x32	; 50
 822:	f0 e0       	ldi	r31, 0x00	; 0
 824:	80 81       	ld	r24, Z
 826:	8d 7f       	andi	r24, 0xFD	; 253
 828:	8c 93       	st	X, r24
 82a:	07 c0       	rjmp	.+14     	; 0x83a <main+0x59e>
 82c:	a2 e3       	ldi	r26, 0x32	; 50
 82e:	b0 e0       	ldi	r27, 0x00	; 0
 830:	e2 e3       	ldi	r30, 0x32	; 50
 832:	f0 e0       	ldi	r31, 0x00	; 0
 834:	80 81       	ld	r24, Z
 836:	82 60       	ori	r24, 0x02	; 2
 838:	8c 93       	st	X, r24

	if(!Dt4_8)   PORTD &=  0xDF; else PORTD |= 0x20; //PD5 - выше 8 град
 83a:	80 91 c3 00 	lds	r24, 0x00C3
 83e:	88 23       	and	r24, r24
 840:	41 f4       	brne	.+16     	; 0x852 <main+0x5b6>
 842:	a2 e3       	ldi	r26, 0x32	; 50
 844:	b0 e0       	ldi	r27, 0x00	; 0
 846:	e2 e3       	ldi	r30, 0x32	; 50
 848:	f0 e0       	ldi	r31, 0x00	; 0
 84a:	80 81       	ld	r24, Z
 84c:	8f 7d       	andi	r24, 0xDF	; 223
 84e:	8c 93       	st	X, r24
 850:	07 c0       	rjmp	.+14     	; 0x860 <main+0x5c4>
 852:	a2 e3       	ldi	r26, 0x32	; 50
 854:	b0 e0       	ldi	r27, 0x00	; 0
 856:	e2 e3       	ldi	r30, 0x32	; 50
 858:	f0 e0       	ldi	r31, 0x00	; 0
 85a:	80 81       	ld	r24, Z
 85c:	80 62       	ori	r24, 0x20	; 32
 85e:	8c 93       	st	X, r24
	if(Dt4_30)   PORTD &=  0xF7; else PORTD |= 0x08;  //PD3 - ниже 30 град
 860:	80 91 8e 00 	lds	r24, 0x008E
 864:	88 23       	and	r24, r24
 866:	41 f0       	breq	.+16     	; 0x878 <main+0x5dc>
 868:	a2 e3       	ldi	r26, 0x32	; 50
 86a:	b0 e0       	ldi	r27, 0x00	; 0
 86c:	e2 e3       	ldi	r30, 0x32	; 50
 86e:	f0 e0       	ldi	r31, 0x00	; 0
 870:	80 81       	ld	r24, Z
 872:	87 7f       	andi	r24, 0xF7	; 247
 874:	8c 93       	st	X, r24
 876:	07 c0       	rjmp	.+14     	; 0x886 <main+0x5ea>
 878:	a2 e3       	ldi	r26, 0x32	; 50
 87a:	b0 e0       	ldi	r27, 0x00	; 0
 87c:	e2 e3       	ldi	r30, 0x32	; 50
 87e:	f0 e0       	ldi	r31, 0x00	; 0
 880:	80 81       	ld	r24, Z
 882:	88 60       	ori	r24, 0x08	; 8
 884:	8c 93       	st	X, r24
	if(!Dt4_37)   PORTC &=  0xFB; else PORTC |= 0x04;  //PС2 - ниже 37 град 37+красн
 886:	80 91 86 00 	lds	r24, 0x0086
 88a:	88 23       	and	r24, r24
 88c:	41 f4       	brne	.+16     	; 0x89e <main+0x602>
 88e:	a5 e3       	ldi	r26, 0x35	; 53
 890:	b0 e0       	ldi	r27, 0x00	; 0
 892:	e5 e3       	ldi	r30, 0x35	; 53
 894:	f0 e0       	ldi	r31, 0x00	; 0
 896:	80 81       	ld	r24, Z
 898:	8b 7f       	andi	r24, 0xFB	; 251
 89a:	8c 93       	st	X, r24
 89c:	07 c0       	rjmp	.+14     	; 0x8ac <main+0x610>
 89e:	a5 e3       	ldi	r26, 0x35	; 53
 8a0:	b0 e0       	ldi	r27, 0x00	; 0
 8a2:	e5 e3       	ldi	r30, 0x35	; 53
 8a4:	f0 e0       	ldi	r31, 0x00	; 0
 8a6:	80 81       	ld	r24, Z
 8a8:	84 60       	ori	r24, 0x04	; 4
 8aa:	8c 93       	st	X, r24

	if(Dt5_37)  PORTC &=  0xEF; else PORTC |= 0x10;  //PC4 - выше 45 град зеленый
 8ac:	80 91 b4 00 	lds	r24, 0x00B4
 8b0:	88 23       	and	r24, r24
 8b2:	41 f0       	breq	.+16     	; 0x8c4 <main+0x628>
 8b4:	a5 e3       	ldi	r26, 0x35	; 53
 8b6:	b0 e0       	ldi	r27, 0x00	; 0
 8b8:	e5 e3       	ldi	r30, 0x35	; 53
 8ba:	f0 e0       	ldi	r31, 0x00	; 0
 8bc:	80 81       	ld	r24, Z
 8be:	8f 7e       	andi	r24, 0xEF	; 239
 8c0:	8c 93       	st	X, r24
 8c2:	07 c0       	rjmp	.+14     	; 0x8d2 <main+0x636>
 8c4:	a5 e3       	ldi	r26, 0x35	; 53
 8c6:	b0 e0       	ldi	r27, 0x00	; 0
 8c8:	e5 e3       	ldi	r30, 0x35	; 53
 8ca:	f0 e0       	ldi	r31, 0x00	; 0
 8cc:	80 81       	ld	r24, Z
 8ce:	80 61       	ori	r24, 0x10	; 16
 8d0:	8c 93       	st	X, r24
	if(!Dt5_95)  PORTC &=  0xFE; else PORTC |= 0x01;  //PC0 - выше 95 град
 8d2:	80 91 b1 00 	lds	r24, 0x00B1
 8d6:	88 23       	and	r24, r24
 8d8:	41 f4       	brne	.+16     	; 0x8ea <main+0x64e>
 8da:	a5 e3       	ldi	r26, 0x35	; 53
 8dc:	b0 e0       	ldi	r27, 0x00	; 0
 8de:	e5 e3       	ldi	r30, 0x35	; 53
 8e0:	f0 e0       	ldi	r31, 0x00	; 0
 8e2:	80 81       	ld	r24, Z
 8e4:	8e 7f       	andi	r24, 0xFE	; 254
 8e6:	8c 93       	st	X, r24
 8e8:	07 c0       	rjmp	.+14     	; 0x8f8 <main+0x65c>
 8ea:	a5 e3       	ldi	r26, 0x35	; 53
 8ec:	b0 e0       	ldi	r27, 0x00	; 0
 8ee:	e5 e3       	ldi	r30, 0x35	; 53
 8f0:	f0 e0       	ldi	r31, 0x00	; 0
 8f2:	80 81       	ld	r24, Z
 8f4:	81 60       	ori	r24, 0x01	; 1
 8f6:	8c 93       	st	X, r24

	if(Dt5_118)  PORTC &=  0xFD; else PORTC |= 0x02;  //PC1 - выше 118 град логика работы 118гр. 
 8f8:	80 91 c4 00 	lds	r24, 0x00C4
 8fc:	88 23       	and	r24, r24
 8fe:	41 f0       	breq	.+16     	; 0x910 <main+0x674>
 900:	a5 e3       	ldi	r26, 0x35	; 53
 902:	b0 e0       	ldi	r27, 0x00	; 0
 904:	e5 e3       	ldi	r30, 0x35	; 53
 906:	f0 e0       	ldi	r31, 0x00	; 0
 908:	80 81       	ld	r24, Z
 90a:	8d 7f       	andi	r24, 0xFD	; 253
 90c:	8c 93       	st	X, r24
 90e:	07 c0       	rjmp	.+14     	; 0x91e <main+0x682>
 910:	a5 e3       	ldi	r26, 0x35	; 53
 912:	b0 e0       	ldi	r27, 0x00	; 0
 914:	e5 e3       	ldi	r30, 0x35	; 53
 916:	f0 e0       	ldi	r31, 0x00	; 0
 918:	80 81       	ld	r24, Z
 91a:	82 60       	ori	r24, 0x02	; 2
 91c:	8c 93       	st	X, r24
	if(Dt6_115)  PORTC &=  0xF7; else PORTC |= 0x08;  //PС3 - выше 115 град и 115 гр. инверсная
 91e:	80 91 7c 00 	lds	r24, 0x007C
 922:	88 23       	and	r24, r24
 924:	41 f0       	breq	.+16     	; 0x936 <main+0x69a>
 926:	a5 e3       	ldi	r26, 0x35	; 53
 928:	b0 e0       	ldi	r27, 0x00	; 0
 92a:	e5 e3       	ldi	r30, 0x35	; 53
 92c:	f0 e0       	ldi	r31, 0x00	; 0
 92e:	80 81       	ld	r24, Z
 930:	87 7f       	andi	r24, 0xF7	; 247
 932:	8c 93       	st	X, r24
 934:	50 cd       	rjmp	.-1376   	; 0x3d6 <main+0x13a>
 936:	a5 e3       	ldi	r26, 0x35	; 53
 938:	b0 e0       	ldi	r27, 0x00	; 0
 93a:	e5 e3       	ldi	r30, 0x35	; 53
 93c:	f0 e0       	ldi	r31, 0x00	; 0
 93e:	80 81       	ld	r24, Z
 940:	88 60       	ori	r24, 0x08	; 8
 942:	8c 93       	st	X, r24
 944:	48 cd       	rjmp	.-1392   	; 0x3d6 <main+0x13a>

00000946 <__vector_5>:
	}
}

 SIGNAL(SIG_INPUT_CAPTURE1)
{
 946:	1f 92       	push	r1
 948:	0f 92       	push	r0
 94a:	0f b6       	in	r0, 0x3f	; 63
 94c:	0f 92       	push	r0
 94e:	11 24       	eor	r1, r1
 950:	2f 93       	push	r18
 952:	3f 93       	push	r19
 954:	4f 93       	push	r20
 956:	5f 93       	push	r21
 958:	8f 93       	push	r24
 95a:	9f 93       	push	r25
 95c:	ef 93       	push	r30
 95e:	ff 93       	push	r31
 960:	df 93       	push	r29
 962:	cf 93       	push	r28
 964:	cd b7       	in	r28, 0x3d	; 61
 966:	de b7       	in	r29, 0x3e	; 62

	ICR1_value=ICR1; //чтение значения как можно раньше
 968:	e6 e4       	ldi	r30, 0x46	; 70
 96a:	f0 e0       	ldi	r31, 0x00	; 0
 96c:	80 81       	ld	r24, Z
 96e:	91 81       	ldd	r25, Z+1	; 0x01
 970:	90 93 bb 00 	sts	0x00BB, r25
 974:	80 93 ba 00 	sts	0x00BA, r24
		
	if ((ICR1_value>ICR1Old)&&(CtOverLow==16))
 978:	20 91 ba 00 	lds	r18, 0x00BA
 97c:	30 91 bb 00 	lds	r19, 0x00BB
 980:	80 91 8b 00 	lds	r24, 0x008B
 984:	90 91 8c 00 	lds	r25, 0x008C
 988:	82 17       	cp	r24, r18
 98a:	93 07       	cpc	r25, r19
 98c:	08 f0       	brcs	.+2      	; 0x990 <__vector_5+0x4a>
 98e:	43 c0       	rjmp	.+134    	; 0xa16 <__vector_5+0xd0>
 990:	80 91 84 00 	lds	r24, 0x0084
 994:	80 31       	cpi	r24, 0x10	; 16
 996:	09 f0       	breq	.+2      	; 0x99a <__vector_5+0x54>
 998:	3e c0       	rjmp	.+124    	; 0xa16 <__vector_5+0xd0>
    	{
    TDizTemp[CtTDiz]=ICR1_value-ICR1Old; //разница между двумя измерениями
 99a:	80 91 89 00 	lds	r24, 0x0089
 99e:	48 2f       	mov	r20, r24
 9a0:	50 e0       	ldi	r21, 0x00	; 0
 9a2:	20 91 ba 00 	lds	r18, 0x00BA
 9a6:	30 91 bb 00 	lds	r19, 0x00BB
 9aa:	80 91 8b 00 	lds	r24, 0x008B
 9ae:	90 91 8c 00 	lds	r25, 0x008C
 9b2:	28 1b       	sub	r18, r24
 9b4:	39 0b       	sbc	r19, r25
 9b6:	ca 01       	movw	r24, r20
 9b8:	88 0f       	add	r24, r24
 9ba:	99 1f       	adc	r25, r25
 9bc:	fc 01       	movw	r30, r24
 9be:	e1 57       	subi	r30, 0x71	; 113
 9c0:	ff 4f       	sbci	r31, 0xFF	; 255
 9c2:	31 83       	std	Z+1, r19	; 0x01
 9c4:	20 83       	st	Z, r18
		if(TDizTemp[CtTDiz]<100)
 9c6:	80 91 89 00 	lds	r24, 0x0089
 9ca:	88 2f       	mov	r24, r24
 9cc:	90 e0       	ldi	r25, 0x00	; 0
 9ce:	88 0f       	add	r24, r24
 9d0:	99 1f       	adc	r25, r25
 9d2:	fc 01       	movw	r30, r24
 9d4:	e1 57       	subi	r30, 0x71	; 113
 9d6:	ff 4f       	sbci	r31, 0xFF	; 255
 9d8:	80 81       	ld	r24, Z
 9da:	91 81       	ldd	r25, Z+1	; 0x01
 9dc:	84 36       	cpi	r24, 0x64	; 100
 9de:	91 05       	cpc	r25, r1
 9e0:	68 f4       	brcc	.+26     	; 0x9fc <__vector_5+0xb6>
    		TDizTemp[CtTDiz]=0xffff; //FFFF - невозможное значение
 9e2:	80 91 89 00 	lds	r24, 0x0089
 9e6:	88 2f       	mov	r24, r24
 9e8:	90 e0       	ldi	r25, 0x00	; 0
 9ea:	88 0f       	add	r24, r24
 9ec:	99 1f       	adc	r25, r25
 9ee:	fc 01       	movw	r30, r24
 9f0:	e1 57       	subi	r30, 0x71	; 113
 9f2:	ff 4f       	sbci	r31, 0xFF	; 255
 9f4:	8f ef       	ldi	r24, 0xFF	; 255
 9f6:	9f ef       	ldi	r25, 0xFF	; 255
 9f8:	91 83       	std	Z+1, r25	; 0x01
 9fa:	80 83       	st	Z, r24
    	
		if(CtTDiz)
 9fc:	80 91 89 00 	lds	r24, 0x0089
 a00:	88 23       	and	r24, r24
 a02:	31 f0       	breq	.+12     	; 0xa10 <__vector_5+0xca>
			--CtTDiz;
 a04:	80 91 89 00 	lds	r24, 0x0089
 a08:	81 50       	subi	r24, 0x01	; 1
 a0a:	80 93 89 00 	sts	0x0089, r24
 a0e:	03 c0       	rjmp	.+6      	; 0xa16 <__vector_5+0xd0>
		else
	CtTDiz=15; //16 выборок
 a10:	8f e0       	ldi	r24, 0x0F	; 15
 a12:	80 93 89 00 	sts	0x0089, r24
		}
	ICR1Old=ICR1_value;
 a16:	80 91 ba 00 	lds	r24, 0x00BA
 a1a:	90 91 bb 00 	lds	r25, 0x00BB
 a1e:	90 93 8c 00 	sts	0x008C, r25
 a22:	80 93 8b 00 	sts	0x008B, r24
	CtOverLow=16; //16 - переполнений до установки флага 0 оборотов.
 a26:	80 e1       	ldi	r24, 0x10	; 16
 a28:	80 93 84 00 	sts	0x0084, r24
	NDiz_Overflow=0;
 a2c:	10 92 7a 00 	sts	0x007A, r1
		
}
 a30:	cf 91       	pop	r28
 a32:	df 91       	pop	r29
 a34:	ff 91       	pop	r31
 a36:	ef 91       	pop	r30
 a38:	9f 91       	pop	r25
 a3a:	8f 91       	pop	r24
 a3c:	5f 91       	pop	r21
 a3e:	4f 91       	pop	r20
 a40:	3f 91       	pop	r19
 a42:	2f 91       	pop	r18
 a44:	0f 90       	pop	r0
 a46:	0f be       	out	0x3f, r0	; 63
 a48:	0f 90       	pop	r0
 a4a:	1f 90       	pop	r1
 a4c:	18 95       	reti

00000a4e <__vector_8>:

 SIGNAL(SIG_OVERFLOW1)/*4.096 Mc = 65536*0.0625us*/ 
    {
 a4e:	1f 92       	push	r1
 a50:	0f 92       	push	r0
 a52:	0f b6       	in	r0, 0x3f	; 63
 a54:	0f 92       	push	r0
 a56:	11 24       	eor	r1, r1
 a58:	8f 93       	push	r24
 a5a:	df 93       	push	r29
 a5c:	cf 93       	push	r28
 a5e:	cd b7       	in	r28, 0x3d	; 61
 a60:	de b7       	in	r29, 0x3e	; 62
	if (CtOverLow) //16 переполнений до установки флага переполнения NDiz_Overflow)
 a62:	80 91 84 00 	lds	r24, 0x0084
 a66:	88 23       	and	r24, r24
 a68:	31 f0       	breq	.+12     	; 0xa76 <__vector_8+0x28>
	 	CtOverLow--;
 a6a:	80 91 84 00 	lds	r24, 0x0084
 a6e:	81 50       	subi	r24, 0x01	; 1
 a70:	80 93 84 00 	sts	0x0084, r24
 a74:	03 c0       	rjmp	.+6      	; 0xa7c <__vector_8+0x2e>
	else NDiz_Overflow=1;
 a76:	81 e0       	ldi	r24, 0x01	; 1
 a78:	80 93 7a 00 	sts	0x007A, r24
    }
 a7c:	cf 91       	pop	r28
 a7e:	df 91       	pop	r29
 a80:	8f 91       	pop	r24
 a82:	0f 90       	pop	r0
 a84:	0f be       	out	0x3f, r0	; 63
 a86:	0f 90       	pop	r0
 a88:	1f 90       	pop	r1
 a8a:	18 95       	reti

00000a8c <__vector_14>:

	 
SIGNAL(SIG_ADC)
{
 a8c:	1f 92       	push	r1
 a8e:	0f 92       	push	r0
 a90:	0f b6       	in	r0, 0x3f	; 63
 a92:	0f 92       	push	r0
 a94:	11 24       	eor	r1, r1
 a96:	2f 93       	push	r18
 a98:	3f 93       	push	r19
 a9a:	4f 93       	push	r20
 a9c:	5f 93       	push	r21
 a9e:	8f 93       	push	r24
 aa0:	9f 93       	push	r25
 aa2:	af 93       	push	r26
 aa4:	bf 93       	push	r27
 aa6:	ef 93       	push	r30
 aa8:	ff 93       	push	r31
 aaa:	df 93       	push	r29
 aac:	cf 93       	push	r28
 aae:	00 d0       	rcall	.+0      	; 0xab0 <__vector_14+0x24>
 ab0:	cd b7       	in	r28, 0x3d	; 61
 ab2:	de b7       	in	r29, 0x3e	; 62
    unsigned int RegInt0;
    RegInt0=ADC;
 ab4:	e4 e2       	ldi	r30, 0x24	; 36
 ab6:	f0 e0       	ldi	r31, 0x00	; 0
 ab8:	80 81       	ld	r24, Z
 aba:	91 81       	ldd	r25, Z+1	; 0x01
 abc:	9a 83       	std	Y+2, r25	; 0x02
 abe:	89 83       	std	Y+1, r24	; 0x01
	
	if(CtAd) 
 ac0:	80 91 c2 00 	lds	r24, 0x00C2
 ac4:	88 23       	and	r24, r24
 ac6:	c9 f0       	breq	.+50     	; 0xafa <__vector_14+0x6e>
	{
	--CtAd; //64 измерения 
 ac8:	80 91 c2 00 	lds	r24, 0x00C2
 acc:	81 50       	subi	r24, 0x01	; 1
 ace:	80 93 c2 00 	sts	0x00C2, r24
	if(CtAd<=CtAd0) 
 ad2:	90 91 c2 00 	lds	r25, 0x00C2
 ad6:	80 91 64 00 	lds	r24, 0x0064
 ada:	89 17       	cp	r24, r25
 adc:	08 f4       	brcc	.+2      	; 0xae0 <__vector_14+0x54>
 ade:	50 c0       	rjmp	.+160    	; 0xb80 <__vector_14+0xf4>
		{  	
	AdTemp +=RegInt0;
 ae0:	80 91 7d 00 	lds	r24, 0x007D
 ae4:	90 91 7e 00 	lds	r25, 0x007E
 ae8:	29 81       	ldd	r18, Y+1	; 0x01
 aea:	3a 81       	ldd	r19, Y+2	; 0x02
 aec:	82 0f       	add	r24, r18
 aee:	93 1f       	adc	r25, r19
 af0:	90 93 7e 00 	sts	0x007E, r25
 af4:	80 93 7d 00 	sts	0x007D, r24
 af8:	43 c0       	rjmp	.+134    	; 0xb80 <__vector_14+0xf4>
		}
	}
	else
	 {
	 AdResult[NumberAd]=AdTemp;
 afa:	80 91 85 00 	lds	r24, 0x0085
 afe:	88 2f       	mov	r24, r24
 b00:	90 e0       	ldi	r25, 0x00	; 0
 b02:	20 91 7d 00 	lds	r18, 0x007D
 b06:	30 91 7e 00 	lds	r19, 0x007E
 b0a:	88 0f       	add	r24, r24
 b0c:	99 1f       	adc	r25, r25
 b0e:	fc 01       	movw	r30, r24
 b10:	eb 53       	subi	r30, 0x3B	; 59
 b12:	ff 4f       	sbci	r31, 0xFF	; 255
 b14:	31 83       	std	Z+1, r19	; 0x01
 b16:	20 83       	st	Z, r18
	 AdResult[NumberAd]>>=6;
 b18:	80 91 85 00 	lds	r24, 0x0085
 b1c:	48 2f       	mov	r20, r24
 b1e:	50 e0       	ldi	r21, 0x00	; 0
 b20:	80 91 85 00 	lds	r24, 0x0085
 b24:	88 2f       	mov	r24, r24
 b26:	90 e0       	ldi	r25, 0x00	; 0
 b28:	88 0f       	add	r24, r24
 b2a:	99 1f       	adc	r25, r25
 b2c:	fc 01       	movw	r30, r24
 b2e:	eb 53       	subi	r30, 0x3B	; 59
 b30:	ff 4f       	sbci	r31, 0xFF	; 255
 b32:	80 81       	ld	r24, Z
 b34:	91 81       	ldd	r25, Z+1	; 0x01
 b36:	9c 01       	movw	r18, r24
 b38:	00 24       	eor	r0, r0
 b3a:	22 0f       	add	r18, r18
 b3c:	33 1f       	adc	r19, r19
 b3e:	00 1c       	adc	r0, r0
 b40:	22 0f       	add	r18, r18
 b42:	33 1f       	adc	r19, r19
 b44:	00 1c       	adc	r0, r0
 b46:	23 2f       	mov	r18, r19
 b48:	30 2d       	mov	r19, r0
 b4a:	ca 01       	movw	r24, r20
 b4c:	88 0f       	add	r24, r24
 b4e:	99 1f       	adc	r25, r25
 b50:	fc 01       	movw	r30, r24
 b52:	eb 53       	subi	r30, 0x3B	; 59
 b54:	ff 4f       	sbci	r31, 0xFF	; 255
 b56:	31 83       	std	Z+1, r19	; 0x01
 b58:	20 83       	st	Z, r18
	 AdTemp=0;
 b5a:	10 92 7e 00 	sts	0x007E, r1
 b5e:	10 92 7d 00 	sts	0x007D, r1
	 CtAd=CtAd0+2;
 b62:	80 91 64 00 	lds	r24, 0x0064
 b66:	8e 5f       	subi	r24, 0xFE	; 254
 b68:	80 93 c2 00 	sts	0x00C2, r24
	 //if(NumberAd==11)
	 NumberAd=NumberAdNew[NumberAd];
 b6c:	80 91 85 00 	lds	r24, 0x0085
 b70:	88 2f       	mov	r24, r24
 b72:	90 e0       	ldi	r25, 0x00	; 0
 b74:	fc 01       	movw	r30, r24
 b76:	e0 5a       	subi	r30, 0xA0	; 160
 b78:	ff 4f       	sbci	r31, 0xFF	; 255
 b7a:	80 81       	ld	r24, Z
 b7c:	80 93 85 00 	sts	0x0085, r24
	 }

	RegInt0=ADMUX;
 b80:	e7 e2       	ldi	r30, 0x27	; 39
 b82:	f0 e0       	ldi	r31, 0x00	; 0
 b84:	80 81       	ld	r24, Z
 b86:	88 2f       	mov	r24, r24
 b88:	90 e0       	ldi	r25, 0x00	; 0
 b8a:	9a 83       	std	Y+2, r25	; 0x02
 b8c:	89 83       	std	Y+1, r24	; 0x01
	RegInt0 &=0xe0; // обнуление MUX4..0 
 b8e:	89 81       	ldd	r24, Y+1	; 0x01
 b90:	9a 81       	ldd	r25, Y+2	; 0x02
 b92:	80 7e       	andi	r24, 0xE0	; 224
 b94:	90 70       	andi	r25, 0x00	; 0
 b96:	9a 83       	std	Y+2, r25	; 0x02
 b98:	89 83       	std	Y+1, r24	; 0x01
	RegInt0 |=NumberAd; //выставление нового адреса канала ацп
 b9a:	80 91 85 00 	lds	r24, 0x0085
 b9e:	28 2f       	mov	r18, r24
 ba0:	30 e0       	ldi	r19, 0x00	; 0
 ba2:	89 81       	ldd	r24, Y+1	; 0x01
 ba4:	9a 81       	ldd	r25, Y+2	; 0x02
 ba6:	82 2b       	or	r24, r18
 ba8:	93 2b       	or	r25, r19
 baa:	9a 83       	std	Y+2, r25	; 0x02
 bac:	89 83       	std	Y+1, r24	; 0x01
	ADMUX=RegInt0;
 bae:	e7 e2       	ldi	r30, 0x27	; 39
 bb0:	f0 e0       	ldi	r31, 0x00	; 0
 bb2:	89 81       	ldd	r24, Y+1	; 0x01
 bb4:	80 83       	st	Z, r24

    ADCSRA |=(1<<ADSC); //start conversion
 bb6:	a6 e2       	ldi	r26, 0x26	; 38
 bb8:	b0 e0       	ldi	r27, 0x00	; 0
 bba:	e6 e2       	ldi	r30, 0x26	; 38
 bbc:	f0 e0       	ldi	r31, 0x00	; 0
 bbe:	80 81       	ld	r24, Z
 bc0:	80 64       	ori	r24, 0x40	; 64
 bc2:	8c 93       	st	X, r24
  	
}
 bc4:	0f 90       	pop	r0
 bc6:	0f 90       	pop	r0
 bc8:	cf 91       	pop	r28
 bca:	df 91       	pop	r29
 bcc:	ff 91       	pop	r31
 bce:	ef 91       	pop	r30
 bd0:	bf 91       	pop	r27
 bd2:	af 91       	pop	r26
 bd4:	9f 91       	pop	r25
 bd6:	8f 91       	pop	r24
 bd8:	5f 91       	pop	r21
 bda:	4f 91       	pop	r20
 bdc:	3f 91       	pop	r19
 bde:	2f 91       	pop	r18
 be0:	0f 90       	pop	r0
 be2:	0f be       	out	0x3f, r0	; 63
 be4:	0f 90       	pop	r0
 be6:	1f 90       	pop	r1
 be8:	18 95       	reti

00000bea <__udivmodsi4>:
 bea:	a1 e2       	ldi	r26, 0x21	; 33
 bec:	1a 2e       	mov	r1, r26
 bee:	aa 1b       	sub	r26, r26
 bf0:	bb 1b       	sub	r27, r27
 bf2:	fd 01       	movw	r30, r26
 bf4:	0d c0       	rjmp	.+26     	; 0xc10 <__udivmodsi4_ep>

00000bf6 <__udivmodsi4_loop>:
 bf6:	aa 1f       	adc	r26, r26
 bf8:	bb 1f       	adc	r27, r27
 bfa:	ee 1f       	adc	r30, r30
 bfc:	ff 1f       	adc	r31, r31
 bfe:	a2 17       	cp	r26, r18
 c00:	b3 07       	cpc	r27, r19
 c02:	e4 07       	cpc	r30, r20
 c04:	f5 07       	cpc	r31, r21
 c06:	20 f0       	brcs	.+8      	; 0xc10 <__udivmodsi4_ep>
 c08:	a2 1b       	sub	r26, r18
 c0a:	b3 0b       	sbc	r27, r19
 c0c:	e4 0b       	sbc	r30, r20
 c0e:	f5 0b       	sbc	r31, r21

00000c10 <__udivmodsi4_ep>:
 c10:	66 1f       	adc	r22, r22
 c12:	77 1f       	adc	r23, r23
 c14:	88 1f       	adc	r24, r24
 c16:	99 1f       	adc	r25, r25
 c18:	1a 94       	dec	r1
 c1a:	69 f7       	brne	.-38     	; 0xbf6 <__udivmodsi4_loop>
 c1c:	60 95       	com	r22
 c1e:	70 95       	com	r23
 c20:	80 95       	com	r24
 c22:	90 95       	com	r25
 c24:	9b 01       	movw	r18, r22
 c26:	ac 01       	movw	r20, r24
 c28:	bd 01       	movw	r22, r26
 c2a:	cf 01       	movw	r24, r30
 c2c:	08 95       	ret

00000c2e <_exit>:
 c2e:	f8 94       	cli

00000c30 <__stop_program>:
 c30:	ff cf       	rjmp	.-2      	; 0xc30 <__stop_program>
